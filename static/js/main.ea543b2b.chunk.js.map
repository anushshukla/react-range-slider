{"version":3,"sources":["Pages/RangeSlider/Provider.js","Pages/RangeSlider/styles.js","Pages/RangeSlider/View.js","components/common/styles.js","Pages/RangeSlider/index.js","Pages/Homepage/index.js","Routes.js","Menus.js","App.js","serviceWorker.js","index.js"],"names":["getCurrentWindowWidth","window","innerWidth","document","documentElement","clientWidth","body","getNearestMultipleOf","number","multiplier","Math","round","WithDualRangeSliderHOC","Component","WithDualRangeSlider","props","wrapperRef","useRef","sliderIconRef","to","from","getUnit","getRangeStartLeft","defaultRangeStart","getRangeEndLeft","defaultRangeEnd","initialState","rangeSliderWidth","activeRange","unit","rangeStartLeft","rangeEndLeft","isTouchActive","width","_useState","useState","_useState2","Object","slicedToArray","state","setState","getRangeStart","currentState","arguments","length","undefined","getRangeEnd","getRange","start","end","getLeftPercent","event","leftOffset","touches","clientX","pageX","currentTarget","getBoundingClientRect","left","sliderIconDiameter","getXFromEvent","setStateCb","updateState","latestState","objectSpread","onTouchEnd","updateScreenSize","useEffect","current","addEventListener","removeEventListener","onAfterChange","react_default","a","createElement","assign","onTouchStart","_objectSpread2","abs","defineProperty","rangeDiffLimit","onMove","onDragStart","preventDefault","stopPropagation","onContextMenu","selectedRangeWidth","getSliderIconDiameter","isActiveRange","range","defaultProps","memo","DualRangeSliderSection","styled","div","_templateObject","Flex","_templateObject2","RangeValue","_templateObject3","_ref","_ref$textAlign","textAlign","SliderLineContainer","_templateObject4","SliderLineWrapper","_templateObject5","SliderLine","_templateObject6","height","SelectedSliderLine","_templateObject7","SliderIcon","_templateObject8","_ref2","_ref2$scale","scale","concat","_ref3","top","_ref4","diameter","_ref5","LeftSliderIcon","_templateObject9","_ref6","RightSliderIcon","_templateObject10","_ref7","positionFrom","positionAt","_eventListners","isTouchSupported","up","move","eventListners","sliderIconScaling","sliderIconPosTop","ref","className","ResponsiveWidth","styles_templateObject","_ref2$margin","margin","TopSpace","styles_templateObject2","space","Label","label","styles_templateObject3","SliderWithDrag","Provider","View","RangeSlider","Pages_RangeSlider","rangeStartMin","setRangeStartMin","_useState3","_useState4","rangeStartMax","setRangeStartMax","_useState5","_useState6","rangeEndMin","setRangeEndMin","_useState7","_useState8","rangeEndMax","setRangeEndMax","_useState9","_useState10","setDefaultRangeStart","_useState11","_useState12","setDefaultRangeEnd","_useState13","_useState14","setRangeDiffLimit","_useState15","_useState16","setTo","_useState17","_useState18","setFrom","_useState19","_useState20","setScale","_useState21","response","_useState22","moreProps","updateInput","updateFunc","target","value","Fragment","htmlFor","type","onChange","RangeSlider_RangeSlider","JSON","stringify","Homepage","Routes","react_router","path","exact","component","Menus","react_router_dom","App","src_Menus","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea543b2b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst getCurrentWindowWidth = () =>\n  window.innerWidth ||\n  document.documentElement.clientWidth ||\n  document.body.clientWidth;\n\nconst getNearestMultipleOf = (number, multiplier) =>\n  Math.round(number / multiplier) * multiplier;\n\nconst WithDualRangeSliderHOC = Component => {\n  const WithDualRangeSlider = props => {\n    const wrapperRef = useRef(null);\n    const sliderIconRef = useRef(null);\n    const { to, from } = props;\n    const getUnit = () => 100 / (to - from);\n    const getRangeStartLeft = () =>\n      getUnit() * (props.defaultRangeStart - from);\n    const getRangeEndLeft = () => getUnit() * (props.defaultRangeEnd - from);\n    const initialState = {\n      rangeSliderWidth: 0,\n      activeRange: '',\n      unit: getUnit(),\n      rangeStartLeft: getRangeStartLeft(),\n      rangeEndLeft: getRangeEndLeft(),\n      isTouchActive: false,\n      window: {\n        width: getCurrentWindowWidth()\n      }\n    };\n    const [state, setState] = useState(initialState);\n    const getSelectedRangeWidth = () =>\n      state.rangeEndLeft - state.rangeStartLeft;\n    const getRangeStart = (currentState = state) =>\n      Math.round(currentState.rangeStartLeft / state.unit + from);\n    const getRangeEnd = (currentState = state) =>\n      Math.round(currentState.rangeEndLeft / state.unit + from);\n    const getRange = () => ({\n      start: getRangeStart(),\n      end: getRangeEnd()\n    });\n    const getSliderIconDiameter = () =>\n      Math.round((state.unit * state.rangeSliderWidth) / 100) - 1;\n    const getXFromEvent = event => {\n      const leftAbsolute =\n        'ontouchstart' in window ? event.touches[0].clientX : event.pageX;\n      const leftOffset =\n        leftAbsolute - event.currentTarget.getBoundingClientRect().left;\n      if (leftOffset > state.rangeSliderWidth) {\n        return state.rangeSliderWidth;\n      }\n      if (leftOffset < 0) {\n        return 0;\n      }\n      const finalLeftOffset = leftOffset - state.sliderIconDiameter;\n      return finalLeftOffset;\n    };\n    const getLeftPercent = event =>\n      (getXFromEvent(event) / state.rangeSliderWidth) * 100;\n    const setStateCb = updateState => latestState => ({\n      ...latestState,\n      ...updateState\n    });\n    const onDragStart = event => {\n      event.preventDefault();\n      event.stopPropagation();\n      return false;\n    };\n    const onContextMenu = event => {\n      event.preventDefault();\n      return false;\n    };\n    const onTouchStart = event => {\n      const left = getLeftPercent(event);\n      const { rangeStartLeft, rangeEndLeft } = state;\n      const rangeStartLeftDiff = Math.abs(rangeStartLeft - left);\n      const rangeEndLeftDiff = Math.abs(rangeEndLeft - left);\n      const activeRange =\n        rangeStartLeftDiff < rangeEndLeftDiff\n          ? 'rangeStartLeft'\n          : 'rangeEndLeft';\n      const updateState = {\n        ...state,\n        [activeRange]: getNearestMultipleOf(left, state.unit),\n        activeRange,\n        isTouchActive: true\n      };\n      const rangeDiff = getRangeEnd(updateState) - getRangeStart(updateState);\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    };\n    const onMove = event => {\n      if (!state.isTouchActive) return;\n      const left = getLeftPercent(event);\n      const updateState = {\n        ...state,\n        [state.activeRange]: getNearestMultipleOf(\n          left,\n          state.unit,\n          state.activeRange\n        )\n      };\n      const rangeDiff = getRangeEnd(updateState) - getRangeStart(updateState);\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    };\n    const onTouchEnd = () =>\n      setState(setStateCb({ activeRange: '', isTouchActive: false }));\n    const updateScreenSize = () => {\n      setState(setStateCb({ window: { width: getCurrentWindowWidth() } }));\n    };\n    const isActiveRange = range => state.activeRange === range;\n    /*\n     * below use effect gets called only\n     * if window width screen changes including on load\n     * as range slider's width is fetched via ref\n     * along with diameter of both the slider icons\n     */\n    useEffect(() => {\n      const {\n        width: rangeSliderWidth\n      } = wrapperRef.current.getBoundingClientRect();\n      const {\n        width: sliderIconDiameter\n      } = sliderIconRef.current.getBoundingClientRect();\n      setState(\n        setStateCb({\n          rangeSliderWidth,\n          sliderIconDiameter\n        })\n      );\n      window.addEventListener('mouseup', onTouchEnd, false);\n      window.addEventListener('resize', updateScreenSize, false);\n      window.addEventListener('orientationchange', updateScreenSize, false);\n      return () => {\n        window.removeEventListener('mouseup', onTouchEnd);\n        window.removeEventListener('resize', updateScreenSize);\n        window.removeEventListener('orientationchange', updateScreenSize);\n      };\n    }, [state.window.width]);\n    /*\n     * below use effect gets called only\n     * if rangeStartLeft (state), rangeEndLeft (state) or from (props) gets changed\n     * as getRange is calculated upon it\n     * and onAfterChange (props) hook is to be called when getRange value changes\n     */\n    useEffect(() => {\n      props.onAfterChange(getRange());\n    }, [state.rangeStartLeft, state.rangeEndLeft, from]);\n    /*\n     * below use effect gets called only\n     * if from (props) or to (props) gets changed\n     * as unit, rangeStartLeft and rangeEndLeft is calculated again\n     */\n    useEffect(() => {\n      setState(\n        setStateCb({\n          unit: getUnit(),\n          rangeStartLeft: getRangeStartLeft(),\n          rangeEndLeft: getRangeEndLeft()\n        })\n      );\n    }, [from, to]);\n    return (\n      <Component\n        {...props}\n        {...state}\n        onTouchStart={onTouchStart}\n        onMove={onMove}\n        onTouchEnd={onTouchEnd}\n        onDragStart={onDragStart}\n        onContextMenu={onContextMenu}\n        selectedRangeWidth={getSelectedRangeWidth()}\n        getRange={getRange}\n        getSliderIconDiameter={getSliderIconDiameter}\n        wrapperRef={wrapperRef}\n        isActiveRange={isActiveRange}\n        sliderIconRef={sliderIconRef}\n      />\n    );\n  };\n\n  WithDualRangeSlider.defaultProps = {\n    defaultRangeStart: 0,\n    defaultRangeEnd: 0,\n    onAfterChange() {}\n  };\n\n  WithDualRangeSlider.propTypes = {\n    from: PropTypes.number.isRequired,\n    to: PropTypes.number.isRequired,\n    rangeDiffLimit: PropTypes.number.isRequired,\n    defaultRangeStart: PropTypes.number,\n    defaultRangeEnd: PropTypes.number,\n    onAfterChange: PropTypes.func\n  };\n\n  return memo(WithDualRangeSlider);\n};\n\nexport default WithDualRangeSliderHOC;\n","import styled from 'styled-components';\n\nexport const DualRangeSliderSection = styled.div`\n  width: 502px;\n  margin: 0 auto;\n  @media (max-width: 400px) {\n    width: 95%;\n  }\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n  margin: 10px 0;\n`;\n\nexport const RangeValue = styled.div`\n  flex: 1;\n  text-align: ${({ textAlign = 'left' }) => textAlign};\n`;\n\nexport const SliderLineContainer = styled.div`\n  margin: 15px 0;\n`;\n\nexport const SliderLineWrapper = styled.div`\n  padding: 10px;\n`;\n\nexport const SliderLine = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  height: ${props => props.height};\n  background: #dfe0e3;\n  position: relative;\n`;\n\nexport const SelectedSliderLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => props.left};\n  width: ${props => props.width};\n  height: 2px;\n  background: #00bcd5;\n  transition: all 0.5s ease;\n`;\n\nexport const SliderIcon = styled.div`\n  position: absolute;\n  top: -5px;\n  width: 12px;\n  height: 12px;\n  transform: ${({ scale = 1 }) => `scale(${scale})`};\n  background: #00bcd5;\n  border-radius: 50%;\n  box-shadow: -1px 0 2px #cfcfcf;\n  @media (max-width: 400px) {\n    top: ${({ top }) => top};\n    width: ${({ diameter }) => diameter};\n    height: ${({ diameter }) => diameter};\n  }\n  transition: left 0.5s ease;\n`;\n\nexport const LeftSliderIcon = styled(SliderIcon)`\n  left: ${({ left }) => left};\n`;\n\nexport const RightSliderIcon = styled(SliderIcon)`\n  ${({ positionFrom, positionAt }) => `${positionFrom}: ${positionAt}`}\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DualRangeSliderSection,\n  Flex,\n  RangeValue,\n  SliderLineContainer,\n  SliderLineWrapper,\n  SliderLine,\n  SelectedSliderLine,\n  LeftSliderIcon,\n  RightSliderIcon\n} from './styles';\n\nconst View = props => {\n  const isTouchSupported = !!('ontouchstart' in window);\n  const start = isTouchSupported ? 'onTouchStart' : 'onMouseDown';\n  const up = isTouchSupported ? 'onTouchEnd' : 'onMouseUp';\n  const move = isTouchSupported ? 'onTouchMove' : 'onMouseMove';\n  const {\n    getSliderIconDiameter,\n    onTouchStart,\n    onMove,\n    onTouchEnd,\n    onDragStart,\n    onContextMenu,\n    isActiveRange,\n    getRange,\n    rangeStartLeft,\n    rangeEndLeft,\n    wrapperRef,\n    selectedRangeWidth,\n    sliderIconRef\n  } = props;\n  const eventListners = {\n    [start]: onTouchStart,\n    [move]: onMove,\n    [up]: onTouchEnd,\n    onDragStart\n  };\n  const sliderIconScaling = activeRange => (isActiveRange(activeRange) ? 2 : 1);\n  const sliderRangeHeight = 2;\n  const sliderIconPosTop = (getSliderIconDiameter() - sliderRangeHeight) / 2;\n  return (\n    <DualRangeSliderSection>\n      <Flex>\n        <RangeValue>From {getRange().start} years</RangeValue>\n        <RangeValue textAlign=\"right\">To {getRange().end} years</RangeValue>\n      </Flex>\n      <SliderLineContainer onContextMenu={onContextMenu}>\n        <SliderLineWrapper {...eventListners}>\n          <SliderLine ref={wrapperRef} height={`${sliderRangeHeight}px`}>\n            <SelectedSliderLine\n              left={`${rangeStartLeft}%`}\n              width={`${selectedRangeWidth}%`}\n            />\n            <LeftSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              left={`${rangeStartLeft}%`}\n              scale={sliderIconScaling('rangeStartLeft')}\n              ref={sliderIconRef}\n            />\n            <RightSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              positionFrom={`${rangeEndLeft === 100 ? 'right' : 'left'}`}\n              positionAt={`${rangeEndLeft === 100 ? 0 : `${rangeEndLeft}%`}`}\n              scale={sliderIconScaling('rangeEndLeft')}\n            />\n          </SliderLine>\n        </SliderLineWrapper>\n      </SliderLineContainer>\n      <div className=\"range-ruler\">\n        <div className=\"range-start\" />\n        <div className=\"range-end\" />\n      </div>\n    </DualRangeSliderSection>\n  );\n};\n\nView.propTypes = {\n  getSliderIconDiameter: PropTypes.func.isRequired,\n  onTouchStart: PropTypes.func.isRequired,\n  onMove: PropTypes.func.isRequired,\n  onTouchEnd: PropTypes.func.isRequired,\n  onDragStart: PropTypes.func.isRequired,\n  onContextMenu: PropTypes.func.isRequired,\n  isActiveRange: PropTypes.func.isRequired,\n  getRange: PropTypes.func.isRequired,\n  rangeStartLeft: PropTypes.number.isRequired,\n  rangeEndLeft: PropTypes.number.isRequired,\n  wrapperRef: PropTypes.shape({}).isRequired,\n  selectedRangeWidth: PropTypes.number.isRequired,\n  sliderIconRef: PropTypes.shape({}).isRequired\n};\n\nexport default memo(View);\n","import styled from 'styled-components';\n\nexport const ResponsiveWidth = styled.div`\n  width: ${({ width }) => width};\n  margin: ${({ margin = '0 auto' }) => margin};\n  @media (max-width: 400px) {\n    width: 90%;\n  }\n`;\n\nexport const TopSpace = styled.div`\n  margin-top: ${({ space }) => space};\n`;\n\nexport const Label = styled.label``;\n","import React, { useState, useEffect } from 'react';\nimport Provider from 'Pages/RangeSlider/Provider';\nimport View from 'Pages/RangeSlider/View';\nimport { Label } from 'components/common/styles';\n\nconst SliderWithDrag = Provider(View);\nconst RangeSlider = props => <SliderWithDrag {...props} />;\n\nexport default props => {\n  const [rangeStartMin, setRangeStartMin] = useState(21);\n  const [rangeStartMax, setRangeStartMax] = useState(36);\n  const [rangeEndMin, setRangeEndMin] = useState(24);\n  const [rangeEndMax, setRangeEndMax] = useState(36);\n  const [defaultRangeStart, setDefaultRangeStart] = useState(25);\n  const [defaultRangeEnd, setDefaultRangeEnd] = useState(29);\n  const [rangeDiffLimit, setRangeDiffLimit] = useState(3);\n  const [to, setTo] = useState(46);\n  const [from, setFrom] = useState(21);\n  const [scale, setScale] = useState(to - from);\n  const [state, setState] = useState({ response: {} });\n  const onAfterChange = response => setState({ response });\n  const moreProps = {\n    rangeStartMin,\n    rangeStartMax,\n    rangeEndMin,\n    rangeEndMax,\n    scale,\n    from,\n    to,\n    defaultRangeStart,\n    defaultRangeEnd,\n    rangeDiffLimit,\n    onAfterChange\n  };\n  useEffect(() => {\n    setScale(to - from);\n  }, [to, from]);\n  const updateInput = updateFunc => event => updateFunc(event.target.value);\n  return (\n    <>\n      <h1>Dual Range Slider</h1>\n      <h2>Demo</h2>\n      <Label htmlFor=\"\">From</Label>\n      <br />\n      <input type=\"number\" value={from} onChange={updateInput(setFrom)} />\n      <br />\n      <Label htmlFor=\"\">To</Label>\n      <br />\n      <input type=\"number\" value={to} onChange={updateInput(setTo)} />\n      <br />\n      <br />\n      <Label htmlFor=\"\">\n        Scale: {scale}\n        <br />\n        (Difference between from and to\n        <br />\n        which gets auto calculated\n        <br /> on changing from and to)\n      </Label>\n      <br />\n      <br />\n      <Label htmlFor=\"\">\n        Range Start Min <br />\n        (Will be implemented if required)\n      </Label>\n      <br />\n      <input\n        type=\"number\"\n        value={rangeStartMin}\n        onChange={updateInput(setRangeStartMin)}\n      />\n      <br />\n      <Label htmlFor=\"\">Default Range Start </Label>\n      <br />\n      <input\n        type=\"number\"\n        value={defaultRangeStart}\n        onChange={updateInput(setDefaultRangeStart)}\n      />\n      <br />\n      <Label htmlFor=\"\">\n        Range Start Max <br />\n        (Will be implemented if required)\n      </Label>\n      <br />\n      <input\n        type=\"number\"\n        value={rangeStartMax}\n        onChange={updateInput(setRangeStartMax)}\n      />\n      <br />\n      <Label htmlFor=\"\">\n        Default Range End <br />\n        (Will be implemented if required)\n      </Label>\n      <br />\n      <input\n        type=\"number\"\n        value={defaultRangeEnd}\n        onChange={updateInput(setDefaultRangeEnd)}\n      />\n      <br />\n      <Label htmlFor=\"\">Range End Min</Label>\n      <br />\n      <input\n        type=\"number\"\n        value={rangeEndMin}\n        onChange={updateInput(setRangeEndMin)}\n      />\n      <br />\n      <Label htmlFor=\"\">\n        Range End Max <br />\n        (Will be implemented if required)\n      </Label>\n      <br />\n      <input\n        type=\"number\"\n        value={rangeEndMax}\n        onChange={updateInput(setRangeEndMax)}\n      />\n      <br />\n      <Label htmlFor=\"\">Range Difference</Label>\n      <br />\n      <input\n        type=\"number\"\n        value={rangeDiffLimit}\n        onChange={updateInput(setRangeDiffLimit)}\n      />\n      <RangeSlider {...props} {...moreProps} />\n      <div>\n        onAfterChange props callback reponse\n        <br />\n        <code>{JSON.stringify(state.response, null, 2)}</code>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nconst Homepage = () => (\n  <center>\n    Welcome, this is the homepage which is work in progress, you gotta be a bit\n    patient.\n  </center>\n);\n\nexport default Homepage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport RangeSlider from 'Pages/RangeSlider';\nimport Homepage from 'Pages/Homepage';\nimport { TopSpace, ResponsiveWidth } from 'components/common/styles';\n\nexport default () => (\n  <TopSpace space=\"60px\">\n    <ResponsiveWidth width=\"500px\">\n      <Switch>\n        <Route path=\"/\" exact component={Homepage} />\n        <Route path=\"/demo/range-slider\" exact component={RangeSlider} />\n      </Switch>\n    </ResponsiveWidth>\n  </TopSpace>\n);\n","import React from 'react';\nimport 'Pages/Homepage/menus.css';\nimport { Link } from 'react-router-dom';\n\nconst Menus = () => (\n  <div>\n    <ul>\n      <li>\n        <Link to=\"/\">Homepage</Link>\n      </li>\n      <li>\n        <Link to=\"/demo/range-slider\">Range Slider Demo</Link>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Menus;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from 'Routes';\nimport Menus from 'Menus';\n\nconst App = () => (\n  <Router>\n    <Menus />\n    <Routes />\n  </Router>\n);\n\nexport default App;\n","/*eslint-disable */\n// @todo remove eslint\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}