{"version":3,"sources":["styles.js","Version2.js","Routes.js","index.js"],"names":["Component","DualRangeSliderSection","styled","div","_templateObject","Flex","_templateObject2","RangeValue","_templateObject3","_ref","_ref$textAlign","textAlign","SliderLineContainer","_templateObject4","SliderLineWrapper","_templateObject5","SliderLine","_templateObject6","SelectedSliderLine","_templateObject7","props","left","width","SliderIcon","_templateObject8","_ref2","_ref3","_ref3$scale","scale","concat","SliderWithDrag2","_eventListners","isTouchSupported","window","start","up","move","eventListners","Object","defineProperty","onTouchStart","onTouchEnd","onTouchMove","react_default","a","createElement","getRange","end","ref","wrapperRef","rangeStartLeft","selectedRangeWidth","isActiveRange","rangeEndLeft","className","WithDualRangeSlider2","useRef","getUnit","to","from","initialState","rangeSliderWidth","defaultRangeStart","defaultRangeEnd","activeRange","_useState","useState","_useState2","slicedToArray","state","setState","useEffect","current","getBoundingClientRect","updateState","objectSpread","getLeft","event","Math","round","leftOffset","touches","clientX","pageX","currentTarget","getXFromEvent","getRangeStart","currentState","getRangeEnd","assign","_objectSpread2","abs","rangeDiffLimit","onAfterChange","range","defaultProps","boxSize","console","log","Version2","Routes","rangeStartMin","setRangeStartMin","_useState3","_useState4","rangeStartMax","setRangeStartMax","_useState5","_useState6","rangeEndMin","setRangeEndMin","_useState7","_useState8","rangeEndMax","setRangeEndMax","_useState9","_useState10","setDefaultRangeStart","_useState11","_useState12","setDefaultRangeEnd","_useState13","_useState14","setRangeDiffLimit","_useState15","_useState16","setTo","_useState17","_useState18","setFrom","_useState19","_useState20","setScale","moreProps","computedScale","updateInput","updateFunc","target","value","type","onChange","src_Version2","rootElement","document","getElementById","ReactDOM","render","src_Routes"],"mappings":"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","file":"static/js/main.6c7a4b81.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const DualRangeSliderSection = styled.div`\n  width: 90%;\n  margin: 0 auto;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n  margin: 10px 0;\n`;\n\nexport const RangeValue = styled.div`\n  flex: 1;\n  text-align: ${({ textAlign = 'left' }) => textAlign};\n`;\n\nexport const SliderLineContainer = styled.div`\n  margin: 15px 0;\n`;\n\nexport const SliderLineWrapper = styled.div`\n  padding: 10px 0;\n`;\n\nexport const SliderLine = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  height: 2px;\n  background: #dfe0e3;\n  position: relative;\n`;\n\nexport const SelectedSliderLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => props.left};\n  width: ${props => props.width};\n  height: 2px;\n  background: #00bcd5;\n`;\n\nexport const SliderIcon = styled.div`\n  position: absolute;\n  top: -5px;\n  left: ${({ left }) => left};\n  transform: ${({ scale = 1 }) => `scale(${scale})`};\n  height: 12px;\n  width: 12px;\n  background: #00bcd5;\n  border-radius: 50%;\n  box-shadow: -1px 0 2px #cfcfcf;\n`;","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  DualRangeSliderSection,\n  Flex,\n  RangeValue,\n  SliderLineContainer,\n  SliderLineWrapper,\n  SliderLine,\n  SelectedSliderLine,\n  SliderIcon\n} from './styles';\nimport \"./styles.css\";\n\nconst WithDualRangeSlider2HOC = Component => props => {\n  const WithDualRangeSlider2 = props => {\n    const wrapperRef = useRef(null);\n    const getScale = () => props.scale || props.to - props.from;\n    const getUnit = () => 100 / getScale();\n    const initialState = {\n      rangeSliderWidth: 0,\n      rangeStartLeft: getUnit() * (props.defaultRangeStart - props.from),\n      rangeEndLeft: getUnit() * (props.defaultRangeEnd - props.from),\n      activeRange: ''\n    };\n    const [state, setState] = useState(initialState);\n    useEffect(() => {\n      const { width: rangeSliderWidth } = wrapperRef.current.getBoundingClientRect();\n      const updateState = { ...state, rangeSliderWidth };\n      setState(updateState);\n    }, {});\n    const getXFromEvent = event => {\n      const leftAbsolute = !!('ontouchstart' in window) ? event.touches[0].clientX : event.pageX;\n      const leftOffset = leftAbsolute - event.currentTarget.getBoundingClientRect().left;\n      if (leftOffset > state.rangeSliderWidth) {\n        return state.rangeSliderWidth;\n      } else if (leftOffset < 0) {\n        return 0;\n      } else {\n        return leftOffset;\n      }\n    }\n    const getLeft = event =>\n      Math.round(getXFromEvent(event) / state.rangeSliderWidth * 100 / getUnit()) * getUnit();\n    const onTouchStart = event => {\n      const left = getLeft(event);\n      const { rangeStartLeft, rangeEndLeft }  = state;\n      const rangeStartLeftDiff = Math.abs(rangeStartLeft - left);\n      const rangeEndLeftDiff = Math.abs(rangeEndLeft - left);\n      const activeRange = rangeStartLeftDiff < rangeEndLeftDiff ? 'rangeStartLeft' : 'rangeEndLeft';\n      const updateState = { ...state, [activeRange]: left, activeRange };\n      const rangeDiff = Math.abs(getRangeStart(updateState) - getRangeEnd(updateState));\n      if (rangeDiff < props.rangeDiffLimit) return;\n      setState(updateState);\n    }\n    const onTouchMove = event => {\n      const left = getLeft(event);\n      const updateState = { ...state, [state.activeRange]: left };\n      const rangeDiff = Math.abs(getRangeStart(updateState) - getRangeEnd(updateState));\n      if (rangeDiff < props.rangeDiffLimit) return;\n      setState(updateState);\n    }\n    const onTouchEnd = event => {\n      setState({ ...state, activeRange: '' });\n      props.onAfterChange(getRange())\n    }\n    const getSelectedRangeWidth = () => state.rangeEndLeft - state.rangeStartLeft;\n    const getRangeStart = currentState =>\n      Math.round(currentState.rangeStartLeft / getUnit() + props.from);\n    const getRangeEnd = currentState =>\n      Math.round(currentState.rangeEndLeft / getUnit() + props.from);\n    const getRange = () => ({\n      start: getRangeStart(state),\n      end: getRangeEnd(state)\n    })\n    const isActiveRange = range => state.activeRange === range;\n    return <Component\n        onTouchStart={onTouchStart}\n        onTouchMove={onTouchMove}\n        onTouchEnd={onTouchEnd}\n        selectedRangeWidth={getSelectedRangeWidth()}\n        {...state}\n        isActiveRange={isActiveRange}\n        getRange={getRange}\n        wrapperRef={wrapperRef}\n        {...props}\n      />\n  }\n  WithDualRangeSlider2.defaultProps = {\n    defaultRangeStart: 50,\n    defaultRangeEnd: 8000,\n    boxSize: 270\n  }\n  return <WithDualRangeSlider2 {...props} />;\n};\n\nconst Slider2 = props => {\n  const isTouchSupported = !!('ontouchstart' in window);\n  const start = isTouchSupported ? 'onTouchStart' : 'onMouseDown';\n  const up = isTouchSupported ? 'onTouchEnd'   : 'onMouseUp';\n  const move = isTouchSupported ? 'onTouchMove'  : 'onMouseMove';\n  const eventListners = {\n    [start]: props.onTouchStart,\n    [up]: props.onTouchEnd,\n    [move]: props.onTouchMove,\n  };\n  return (\n    <DualRangeSliderSection>\n      <Flex>\n        <RangeValue>From {props.getRange().start} years</RangeValue>\n        <RangeValue textAlign=\"right\">To {props.getRange().end} years</RangeValue>\n      </Flex>\n      <SliderLineContainer>\n        <SliderLineWrapper {...eventListners}>\n          <SliderLine ref={props.wrapperRef} >\n            <SelectedSliderLine left={`${props.rangeStartLeft}%`} width={`${props.selectedRangeWidth}%`} />\n            <SliderIcon\n              left={`${props.rangeStartLeft}%`}\n              scale={props.isActiveRange('rangeStartLeft') ? 2 : 1}\n            />\n            <SliderIcon\n              left={`${props.rangeEndLeft}%`}\n              scale={props.isActiveRange('rangeEndLeft') ? 2 : 1}\n            />\n          </SliderLine>\n        </SliderLineWrapper>\n      </SliderLineContainer>\n      <div className='range-ruler'>\n        <div className='range-start' />\n        <div className='range-end' />\n      </div>\n    </DualRangeSliderSection>\n  );\n};\n\nconst SliderWithDrag2 = WithDualRangeSlider2HOC(Slider2);\n\nconst onAfterChange = state => console.log(state);\n\nexport const Version2 = props => <SliderWithDrag2 onAfterChange={onAfterChange} {...props} />\n\nexport default Version2;\n","import React, { useState, useEffect } from \"react\";\nimport Version2 from './Version2';\n\nconst Routes = () => {\n  const [rangeStartMin, setRangeStartMin] = useState(21);\n  const [rangeStartMax, setRangeStartMax] = useState(36);\n  const [rangeEndMin, setRangeEndMin] = useState(24);\n  const [rangeEndMax, setRangeEndMax] = useState(36);\n  const [defaultRangeStart, setDefaultRangeStart] = useState(25);\n  const [defaultRangeEnd, setDefaultRangeEnd] = useState(29);\n  const [rangeDiffLimit, setRangeDiffLimit] = useState(3);\n  const [to, setTo] = useState(46);\n  const [from, setFrom] = useState(21);\n  const [scale, setScale] = useState(to - from);\n  const moreProps = {\n    rangeStartMin,\n    rangeStartMax,\n    rangeEndMin,\n    rangeEndMax,\n    scale,\n    from,\n    to,\n    defaultRangeStart,\n    defaultRangeEnd,\n    rangeDiffLimit\n  }\n  useEffect(() => {\n    const computedScale = to - from;\n    computedScale !== scale && setScale(computedScale);\n  }, [to, from])\n  const updateInput = updateFunc => event => updateFunc(event.target.value);\n  return (\n    <div className=\"App\">\n      <h1>Range Slider</h1>\n      <h2>Example!</h2>\n      <br /><label>Scale <br />(Difference between from and to which gets auto calculated on changing from and to)</label><br/>\n      <input type=\"number\" value={scale} onChange={updateInput(setScale)} />\n      <br /><label>From</label><br/>\n      <input type=\"number\" value={from} onChange={updateInput(setFrom)} />\n      <br /><label>To</label><br/>\n      <input type=\"number\" value={to} onChange={updateInput(setTo)} />\n      <br /><label>Range Start Min (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMin} onChange={updateInput(setRangeStartMin)} />\n      <br /><label>Default Range Start </label><br/>\n      <input type=\"number\" value={defaultRangeStart} onChange={updateInput(setDefaultRangeStart)} />\n      <br /><label>Range Start Max  (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMax} onChange={updateInput(setRangeStartMax)} />\n      <br /><label>Default Range End  (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={defaultRangeEnd} onChange={updateInput(setDefaultRangeEnd)} />\n      <br /><label>Range End Min</label><br/>\n      <input type=\"number\" value={rangeEndMin} onChange={updateInput(setRangeEndMin)} />\n      <br /><label>Range End Max (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeEndMax} onChange={updateInput(setRangeEndMax)} />\n      <br /><label>Range Difference</label><br/>\n      <input type=\"number\" value={rangeDiffLimit} onChange={updateInput(setRangeDiffLimit)} />\n      <Version2 {...moreProps} />\n    </div>\n  )\n};\n\nexport default Routes;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from './Routes';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Routes />, rootElement);\n"],"sourceRoot":""}