{"version":3,"sources":["styles.js","Version1.js","Version2.js","Routes.js","index.js"],"names":["Component","Flex","styled","div","_templateObject","RangeValue","_templateObject2","SliderLine","_templateObject3","SelectedSliderLine","_templateObject4","props","left","width","SliderIcon","_templateObject5","_ref","_ref2","_ref2$scale","scale","concat","react_default","a","createElement","className","range","start","end","value","onKeyDown","disableKeyPadOpen","max","step","type","onChange","onInputRangeChange","SliderWithDrag2","WithDualRangeSlider2","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","getUnit","boxSize","state","rangeStartLeft","defaultRangeStart","rangeStartMin","rangeEndLeft","defaultRangeEnd","activeRange","getXFromEvent","event","leftOffset","window","touches","clientX","pageX","currentTarget","getBoundingClientRect","getLeft","Math","round","onTouchStart","setState","_objectSpread2","abs","updateState","objectSpread","defineProperty","getRangeStart","getRangeEnd","rangeDiffLimit","onTouchMove","objectWithoutProperties","onTouchEnd","undefined","isActiveRange","render","assign","selectedRangeWidth","inherits","createClass","key","get","React","defaultProps","WithDualRangeSlider2HOC","_eventListners","isTouchSupported","up","move","eventListners","style","margin","padding","onAfterChange","console","log","Version2","Routes","_useState","useState","_useState2","slicedToArray","setRangeStartMin","_useState3","_useState4","rangeStartMax","setRangeStartMax","_useState5","_useState6","rangeEndMin","setRangeEndMin","_useState7","_useState8","rangeEndMax","setRangeEndMax","_useState9","_useState10","setDefaultRangeStart","_useState11","_useState12","setDefaultRangeEnd","_useState13","_useState14","setRangeDiffLimit","_useState15","_useState16","setStep","_useState17","_useState18","setScale","moreProps","updateInput","updateFunc","target","src_Version2","rootElement","document","getElementById","ReactDOM","src_Routes"],"mappings":"4iCAEO,ICKwBA,EDLlBC,EAAOC,IAAOC,IAAVC,KAOJC,EAAaH,IAAOC,IAAVG,KAKVC,EAAaL,IAAOC,IAAVK,KAOVC,EAAqBP,IAAOC,IAAVO,IAGrB,SAAAC,GAAK,OAAIA,EAAMC,MACd,SAAAD,GAAK,OAAIA,EAAME,QAKbC,EAAaZ,IAAOC,IAAVY,IAGb,SAAAC,GAAA,OAAAA,EAAGJ,MACE,SAAAK,GAAA,IAAAC,EAAAD,EAAGE,MAAH,eAAAC,YAAA,IAAAF,EAAW,EAAXA,EAAA,gBC3BgBlB,EA0DhB,SAAAW,GAAK,OAClBU,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAACtB,EAAD,KACEoB,EAAAC,EAAAC,cAAClB,EAAD,qBAA0BM,EAAMc,MAAMC,OACtCL,EAAAC,EAAAC,cAAClB,EAAD,mBAAwBM,EAAMc,MAAME,MAEtCN,EAAAC,EAAAC,cAAA,SACEK,MAAOjB,EAAMc,MAAMC,MACnBG,UAAWlB,EAAMmB,kBACjBC,IAAKpB,EAAMQ,MACXa,KAAMrB,EAAMqB,KACZC,KAAK,QACLC,SAAUvB,EAAMwB,mBAAmB,WAErCd,EAAAC,EAAAC,cAAA,SACEK,MAAOjB,EAAMc,MAAME,IACnBE,UAAWlB,EAAMmB,kBACjBC,IAAKpB,EAAMQ,MACXa,KAAMrB,EAAMqB,KACZC,KAAK,QACLC,SAAUvB,EAAMwB,mBAAmB,0BC8CnCC,EAzH0B,SAAApC,GAAS,OAAI,SAAAW,GAAS,IAC9C0B,EAD8C,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAvB,OAAA2B,MAElDO,QAAU,kBAAMd,EAAK7B,MAAMQ,MAAMqB,EAAK7B,MAAM4C,SAFMf,EAGlDgB,MAAQ,CACNC,eAAiC,IAAjBjB,EAAKc,WAAmBd,EAAK7B,MAAM+C,kBAAoBlB,EAAK7B,MAAMgD,eAClFC,aAA+B,IAAjBpB,EAAKc,WAAmBd,EAAK7B,MAAMkD,gBAAkBrB,EAAK7B,MAAMgD,eAC9EG,YAAa,IANmCtB,EAQlDuB,cAAgB,SAAAC,GACd,IACMC,GADkB,iBAAkBC,OAAUF,EAAMG,QAAQ,GAAGC,QAAUJ,EAAMK,OACnDL,EAAMM,cAAcC,wBAAwB3D,KAC9E,OAAIqD,EAAazB,EAAK7B,MAAM4C,QACnBf,EAAK7B,MAAM4C,QACTU,EAAa,EACf,EAEAA,GAhBuCzB,EAmBlDgC,QAAU,SAAAR,GAAK,OACbS,KAAKC,MAAMlC,EAAKuB,cAAcC,GAASxB,EAAK7B,MAAMQ,OAASqB,EAAKc,UAAY,KApB5Bd,EAqBlDmC,aAAe,SAAAX,GACb,IAAMpD,EAAO4B,EAAKgC,QAAQR,GAC1BxB,EAAKoC,SAAS,SAAApB,GAAS,IAAAqB,EACbpB,EAAkCD,EAAlCC,eAAgBG,EAAkBJ,EAAlBI,aAGlBE,EAFqBW,KAAKK,IAAIrB,EAAiB7C,GAC5B6D,KAAKK,IAAIlB,EAAehD,GACW,iBAAmB,eACzEmE,EAAWtC,OAAAuC,EAAA,EAAAvC,CAAA,GAAQe,GAARqB,EAAA,GAAApC,OAAAwC,EAAA,EAAAxC,CAAAoC,EAAgBf,EAAclD,GAA9B6B,OAAAwC,EAAA,EAAAxC,CAAAoC,EAAA,cAAoCf,GAApCe,IAEjB,OADkBJ,KAAKK,IAAItC,EAAK0C,cAAcH,GAAevC,EAAK2C,YAAYJ,IAC9DpE,EAAMyE,eACb,KAEFL,KAjCuCvC,EAoClD6C,YAAc,SAAArB,GACZ,IAAMpD,EAAO4B,EAAKgC,QAAQR,GAC1BxB,EAAKoC,SAAS,SAAA5D,GAA+B,IAA5B8C,EAA4B9C,EAA5B8C,YAAgBN,EAAYf,OAAA6C,EAAA,EAAA7C,CAAAzB,EAAA,iBACrC+D,EAAWtC,OAAAuC,EAAA,EAAAvC,CAAA,GAAQe,EAARf,OAAAwC,EAAA,EAAAxC,CAAA,GAAgBqB,EAAclD,IAE/C,OADkB6D,KAAKK,IAAItC,EAAK0C,cAAcH,GAAevC,EAAK2C,YAAYJ,IAC9DpE,EAAMyE,eACb,KAEFL,KA5CuCvC,EA+ClD+C,WAAa,SAAAvB,GACXxB,EAAKoC,SAAS,CAAEd,YAAa,MAhDmBtB,EAqDlD0C,cAAgB,eAAC1B,EAADX,UAAAC,OAAA,QAAA0C,IAAA3C,UAAA,GAAAA,UAAA,GAASL,EAAKgB,MAAd,OACdiB,KAAKC,MAAMlB,EAAMC,eAAiBjB,EAAKc,UAAY,IAAK,IAAMd,EAAK7B,MAAMgD,eAtDzBnB,EAuDlD2C,YAAc,eAAC3B,EAADX,UAAAC,OAAA,QAAA0C,IAAA3C,UAAA,GAAAA,UAAA,GAASL,EAAKgB,MAAd,OACZiB,KAAKC,MAAMlB,EAAMI,aAAepB,EAAKc,UAAY,IAAK,IAAMd,EAAK7B,MAAMgD,eAxDvBnB,EAyDlDiD,cAAgB,SAAAhE,GAAK,OAAIe,EAAKgB,MAAMM,cAAgBrC,GAzDFe,EA0DlDkD,OAAS,kBACPrE,EAAAC,EAAAC,cAACvB,EAADyC,OAAAkD,OAAA,CACEhB,aAAcnC,EAAKmC,aACnBU,YAAa7C,EAAK6C,YAClBE,WAAY/C,EAAK+C,WACjBK,mBAAoBpD,EAAKoD,oBACrBpD,EAAKgB,MALX,CAMEiC,cAAejD,EAAKiD,cACpBhE,MAAO,CACLC,MAAOc,EAAK0C,gBACZvD,IAAKa,EAAK2C,gBAER3C,EAAK7B,SAtEqC6B,EAAA,OAAAC,OAAAoD,EAAA,EAAApD,CAAAJ,EAAAC,GAAAG,OAAAqD,EAAA,EAAArD,CAAAJ,EAAA,EAAA0D,IAAA,qBAAAC,IAAA,WAmDhD,OAAOrD,KAAKa,MAAMI,aAAejB,KAAKa,MAAMC,mBAnDIpB,EAAA,CACjB4D,IAAMjG,WA8EzC,OALAqC,EAAqB6D,aAAe,CAClCxC,kBAAmB,GACnBG,gBAAiB,IACjBN,QAAS,KAEJlC,EAAAC,EAAAC,cAACc,EAAyB1B,IA0CXwF,CAvCR,SAAAxF,GAAS,IAAAyF,EACjBC,KAAsB,iBAAkBnC,QACxCxC,EAAQ2E,EAAmB,eAAiB,cAC5CC,EAAKD,EAAmB,aAAiB,YACzCE,EAAOF,EAAmB,cAAiB,cAC3CG,GAAaJ,EAAA,GAAA3D,OAAAwC,EAAA,EAAAxC,CAAA2D,EAChB1E,EAAQf,EAAMgE,cADElC,OAAAwC,EAAA,EAAAxC,CAAA2D,EAEhBE,EAAK3F,EAAM4E,YAFK9C,OAAAwC,EAAA,EAAAxC,CAAA2D,EAGhBG,EAAO5F,EAAM0E,aAHGe,GAKnB,OACE/E,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACjBH,EAAAC,EAAAC,cAACtB,EAAD,KACEoB,EAAAC,EAAAC,cAAClB,EAAD,aAAkBM,EAAMc,MAAMC,MAA9B,UACAL,EAAAC,EAAAC,cAAClB,EAAD,WAAgBM,EAAMc,MAAME,IAA5B,WAEFN,EAAAC,EAAAC,cAAA,OAAKkF,MAAO,CAAEC,OAAQ,WACpBrF,EAAAC,EAAAC,cAAA,MAAAkB,OAAAkD,OAAA,CAAKc,MAAO,CAAEE,QAAS,WAAeH,GACtCnF,EAAAC,EAAAC,cAAChB,EAAD,KACEc,EAAAC,EAAAC,cAACd,EAAD,CAAoBG,KAAI,GAAAQ,OAAKT,EAAM8C,eAAX,KAA8B5C,MAAK,GAAAO,OAAKT,EAAMiF,mBAAX,OAC3DvE,EAAAC,EAAAC,cAACT,EAAD,CACEF,KAAI,GAAAQ,OAAKT,EAAM8C,eAAX,KACJtC,MAAOR,EAAM8E,cAAc,kBAAoB,EAAI,IAErDpE,EAAAC,EAAAC,cAACT,EAAD,CACEF,KAAI,GAAAQ,OAAKT,EAAMiD,aAAX,KACJzC,MAAOR,EAAM8E,cAAc,gBAAkB,EAAI,OAKvDpE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAQjBoF,EAAgB,SAAApD,GAAK,OAAIqD,QAAQC,IAAItD,IAI5BuD,EAFS,SAAApG,GAAK,OAAIU,EAAAC,EAAAC,cAACa,EAADK,OAAAkD,OAAA,CAAiBiB,cAAeA,GAAmBjG,KClDrEqG,EAjDA,WAAM,IAAAC,EACuBC,mBAAS,IADhCC,EAAA1E,OAAA2E,EAAA,EAAA3E,CAAAwE,EAAA,GACZtD,EADYwD,EAAA,GACGE,EADHF,EAAA,GAAAG,EAEuBJ,mBAAS,IAFhCK,EAAA9E,OAAA2E,EAAA,EAAA3E,CAAA6E,EAAA,GAEZE,EAFYD,EAAA,GAEGE,EAFHF,EAAA,GAAAG,EAGmBR,mBAAS,IAH5BS,EAAAlF,OAAA2E,EAAA,EAAA3E,CAAAiF,EAAA,GAGZE,EAHYD,EAAA,GAGCE,EAHDF,EAAA,GAAAG,EAImBZ,mBAAS,IAJ5Ba,EAAAtF,OAAA2E,EAAA,EAAA3E,CAAAqF,EAAA,GAIZE,EAJYD,EAAA,GAICE,EAJDF,EAAA,GAAAG,EAK+BhB,mBAAS,IALxCiB,EAAA1F,OAAA2E,EAAA,EAAA3E,CAAAyF,EAAA,GAKZxE,EALYyE,EAAA,GAKOC,EALPD,EAAA,GAAAE,EAM2BnB,mBAAS,IANpCoB,EAAA7F,OAAA2E,EAAA,EAAA3E,CAAA4F,EAAA,GAMZxE,EANYyE,EAAA,GAMKC,EANLD,EAAA,GAAAE,EAOyBtB,mBAAS,GAPlCuB,EAAAhG,OAAA2E,EAAA,EAAA3E,CAAA+F,EAAA,GAOZpD,EAPYqD,EAAA,GAOIC,EAPJD,EAAA,GAAAE,EAQKzB,mBAAS,GARd0B,EAAAnG,OAAA2E,EAAA,EAAA3E,CAAAkG,EAAA,GAQZ3G,EARY4G,EAAA,GAQNC,EARMD,EAAA,GAAAE,EASO5B,mBAAS,IAThB6B,EAAAtG,OAAA2E,EAAA,EAAA3E,CAAAqG,EAAA,GASZ3H,EATY4H,EAAA,GASLC,EATKD,EAAA,GAUbE,EAAY,CAChBtF,gBACA6D,gBACAI,cACAI,cACAhG,OACAb,QACAuC,oBACAG,kBACAuB,kBAEI8D,EAAc,SAAAC,GAAU,OAAI,SAAAnF,GAAK,OAAImF,EAAWnF,EAAMoF,OAAOxH,SACnE,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,qBAAmBF,EAAAC,EAAAC,cAAA,WACzBF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAOI,EAAME,SAAUgH,EAAYL,KACxDxH,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,sBAAoBF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAOT,EAAOe,SAAUgH,EAAYF,KACzD3H,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,iCAA+BF,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAO+B,EAAezB,SAAUgH,EAAY7B,KACjEhG,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,qCAAmCF,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAO8B,EAAmBxB,SAAUgH,EAAYd,KACrE/G,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,iCAA+BF,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAO4F,EAAetF,SAAUgH,EAAYzB,KACjEpG,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,mCAAiCF,EAAAC,EAAAC,cAAA,WACvCF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAOiC,EAAiB3B,SAAUgH,EAAYX,KACnElH,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,8BAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAOgG,EAAa1F,SAAUgH,EAAYrB,KAC/DxG,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,8BAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAOoG,EAAa9F,SAAUgH,EAAYjB,KAC/D5G,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,iCAA+BF,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAASL,MAAOwD,EAAgBlD,SAAUgH,EAAYR,KAClErH,EAAAC,EAAAC,cAAC8H,EAAaJ,KC5EdK,EAAcC,SAASC,eAAe,QAC5CC,IAAS/D,OAAOrE,EAAAC,EAAAC,cAACmI,EAAD,MAAYJ","file":"static/js/main.d6b8f9e8.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Flex = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-content: space-between;\r\n  margin-top: 10px 0;\r\n`;\r\n\r\nexport const RangeValue = styled.div`\r\n  flex: 1;\r\n  text-align: left;\r\n`;\r\n\r\nexport const SliderLine = styled.div`\r\n  width: 270px;\r\n  height: 2px;\r\n  background: #dfe0e3;\r\n  position: relative;\r\n`;\r\n\r\nexport const SelectedSliderLine = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: ${props => props.left};\r\n  width: ${props => props.width};\r\n  height: 2px;\r\n  background: #00bcd5;\r\n`;\r\n\r\nexport const SliderIcon = styled.div`\r\n  position: absolute;\r\n  top: -5px;\r\n  left: ${({ left }) => left};\r\n  transform: ${({ scale = 1 }) => `scale(${scale})`};\r\n  height: 12px;\r\n  width: 12px;\r\n  background: #00bcd5;\r\n  border-radius: 50%;\r\n`;","import React from \"react\";\r\nimport { \r\n  Flex,\r\n  RangeValue,\r\n} from './styles';\r\nimport \"./styles.css\";\r\n\r\nconst WithDualRangeSliderHOC = Component => props => {\r\n  class WithDualRangeSlider extends React.Component {\r\n    state = {\r\n      range: {\r\n        start: this.props.defaultRangeStart || 50,\r\n        end: this.props.defaultRangeEnd || 8000\r\n      }\r\n    };\r\n    afterOnChange = () => {\r\n      this.props.onAfterChange &&\r\n        this.props.onAfterChange(this.state);\r\n    };\r\n    onInputRangeChange = rangePosition => event => {\r\n      event.persist();\r\n      const value = Number.parseInt(\r\n        event.target.value,\r\n        10\r\n      );\r\n      this.setState(state => {\r\n        const { range } = state;\r\n        if (\r\n          rangePosition === \"start\" &&\r\n          (value > range.end ||\r\n            value < this.props.rangeStartMin ||\r\n            value > this.props.rangeStartMax)\r\n        ) {\r\n          return null;\r\n        }\r\n        if (\r\n          rangePosition === \"end\" &&\r\n          (value < range.start ||\r\n            value < this.props.rangeEndMin ||\r\n            value > this.props.rangeEndMax)\r\n        ) {\r\n          return null;\r\n        }\r\n        return {\r\n          ...state,\r\n          range: {\r\n            ...range,\r\n            [rangePosition]: value\r\n          }\r\n        };\r\n      }, this.afterOnChange);\r\n    };\r\n    disableKeyPadOpen = event =>\r\n      event.preventDefault();\r\n    render = () => (\r\n      <Component\r\n        {...this.state}\r\n        onInputRangeChange={this.onInputRangeChange}\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n  return <WithDualRangeSlider {...props} />;\r\n};\r\n\r\nconst Slider = props => (\r\n  <section className=\"range-slider\">\r\n    <Flex>\r\n      <RangeValue>Range Start: {props.range.start}</RangeValue>\r\n      <RangeValue>Range End: {props.range.end}</RangeValue>\r\n    </Flex>\r\n    <input\r\n      value={props.range.start}\r\n      onKeyDown={props.disableKeyPadOpen}\r\n      max={props.scale}\r\n      step={props.step}\r\n      type=\"range\"\r\n      onChange={props.onInputRangeChange(\"start\")}\r\n    />\r\n    <input\r\n      value={props.range.end}\r\n      onKeyDown={props.disableKeyPadOpen}\r\n      max={props.scale}\r\n      step={props.step}\r\n      type=\"range\"\r\n      onChange={props.onInputRangeChange(\"end\")}\r\n    />\r\n  </section>\r\n);\r\n\r\nconst SliderWithDrag =  WithDualRangeSliderHOC(Slider);\r\n\r\nconst onAfterChange = state => console.log(state);\r\n\r\nconst Version1 = props => <SliderWithDrag onAfterChange={onAfterChange} {...props} />\r\n\r\nexport default Version1;","import React from \"react\";\r\nimport { \r\n  Flex,\r\n  RangeValue,\r\n  SliderLine,\r\n  SelectedSliderLine,\r\n  SliderIcon\r\n} from './styles';\r\nimport \"./styles.css\";\r\n\r\nconst WithDualRangeSlider2HOC = Component => props => {\r\n  class WithDualRangeSlider2 extends React.Component {\r\n    getUnit = () => this.props.scale/this.props.boxSize;\r\n    state = {\r\n      rangeStartLeft: this.getUnit() * 100 * (this.props.defaultRangeStart - this.props.rangeStartMin),\r\n      rangeEndLeft: this.getUnit() * 100 * (this.props.defaultRangeEnd - this.props.rangeStartMin),\r\n      activeRange: ''\r\n    };\r\n    getXFromEvent = event => {\r\n      const leftAbsolute = !!('ontouchstart' in window) ? event.touches[0].clientX : event.pageX;\r\n      const leftOffset = leftAbsolute - event.currentTarget.getBoundingClientRect().left;\r\n      if (leftOffset > this.props.boxSize) {\r\n        return this.props.boxSize;\r\n      } else if (leftOffset < 0) {\r\n        return 0;\r\n      } else {\r\n        return leftOffset;\r\n      }\r\n    }\r\n    getLeft = event =>\r\n      Math.round(this.getXFromEvent(event) / this.props.scale) * this.getUnit() * 100\r\n    onTouchStart = event => {\r\n      const left = this.getLeft(event);  \r\n      this.setState(state => {\r\n        const { rangeStartLeft, rangeEndLeft }  = state;\r\n        const rangeStartLeftDiff = Math.abs(rangeStartLeft - left);\r\n        const rangeEndLeftDiff = Math.abs(rangeEndLeft - left);\r\n        const activeRange = rangeStartLeftDiff < rangeEndLeftDiff ? 'rangeStartLeft' : 'rangeEndLeft';\r\n        const updateState = { ...state, [activeRange]: left, activeRange };\r\n        const rangeDiff = Math.abs(this.getRangeStart(updateState) - this.getRangeEnd(updateState));\r\n        if (rangeDiff < props.rangeDiffLimit) {\r\n          return null;\r\n        }\r\n        return updateState;\r\n      });\r\n    }\r\n    onTouchMove = event => {\r\n      const left = this.getLeft(event);  \r\n      this.setState(({ activeRange, ...state }) => {\r\n        const updateState = { ...state, [activeRange]: left };\r\n        const rangeDiff = Math.abs(this.getRangeStart(updateState) - this.getRangeEnd(updateState));\r\n        if (rangeDiff < props.rangeDiffLimit) {\r\n          return null;\r\n        }\r\n        return updateState;\r\n      });\r\n    }\r\n    onTouchEnd = event => {\r\n      this.setState({ activeRange: '' });\r\n    }\r\n    get selectedRangeWidth() {\r\n      return this.state.rangeEndLeft - this.state.rangeStartLeft;\r\n    }\r\n    getRangeStart = (state = this.state) =>\r\n      Math.round(state.rangeStartLeft / this.getUnit() / 100, 10) + this.props.rangeStartMin;\r\n    getRangeEnd = (state = this.state) =>\r\n      Math.round(state.rangeEndLeft / this.getUnit() / 100, 10) + this.props.rangeStartMin;\r\n    isActiveRange = range => this.state.activeRange === range;\r\n    render = () => (\r\n      <Component\r\n        onTouchStart={this.onTouchStart}\r\n        onTouchMove={this.onTouchMove}\r\n        onTouchEnd={this.onTouchEnd}\r\n        selectedRangeWidth={this.selectedRangeWidth}\r\n        {...this.state}\r\n        isActiveRange={this.isActiveRange}\r\n        range={{\r\n          start: this.getRangeStart(),\r\n          end: this.getRangeEnd(),\r\n        }}\r\n        {...this.props}\r\n      />\r\n    );\r\n  }\r\n  WithDualRangeSlider2.defaultProps = {\r\n    defaultRangeStart: 50,\r\n    defaultRangeEnd: 8000,\r\n    boxSize: 270\r\n  }\r\n  return <WithDualRangeSlider2 {...props} />;\r\n};\r\n\r\nconst Slider2 = props => {\r\n  const isTouchSupported = !!('ontouchstart' in window);\r\n  const start = isTouchSupported ? 'onTouchStart' : 'onMouseDown';\r\n  const up = isTouchSupported ? 'onTouchEnd'   : 'onMouseUp';\r\n  const move = isTouchSupported ? 'onTouchMove'  : 'onMouseMove';\r\n  const eventListners = {\r\n    [start]: props.onTouchStart,\r\n    [up]: props.onTouchEnd,\r\n    [move]: props.onTouchMove,\r\n  };\r\n  return (\r\n    <section className=\"range-slider\">\r\n      <Flex>\r\n        <RangeValue>From {props.range.start} years</RangeValue>\r\n        <RangeValue>To {props.range.end} years</RangeValue>\r\n      </Flex>\r\n      <div style={{ margin: '15px 0'}}>\r\n        <div style={{ padding: '10px 0'}} {...eventListners}>\r\n        <SliderLine>\r\n          <SelectedSliderLine left={`${props.rangeStartLeft}%`} width={`${props.selectedRangeWidth}%`} />\r\n          <SliderIcon\r\n            left={`${props.rangeStartLeft}%`}\r\n            scale={props.isActiveRange('rangeStartLeft') ? 2 : 1}\r\n          />\r\n          <SliderIcon\r\n            left={`${props.rangeEndLeft}%`}\r\n            scale={props.isActiveRange('rangeEndLeft') ? 2 : 1}\r\n          />\r\n        </SliderLine>\r\n        </div>\r\n      </div>\r\n      <div className='range-ruler'>\r\n        <div className='range-start' />\r\n        <div className='range-end' />\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst SliderWithDrag2 = WithDualRangeSlider2HOC(Slider2);\r\n\r\nconst onAfterChange = state => console.log(state);\r\n\r\nexport const Version2 = props => <SliderWithDrag2 onAfterChange={onAfterChange} {...props} />\r\n\r\nexport default Version2;\r\n","import React, { useState } from \"react\";\r\n/*import {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n} from 'react-router-dom';*/\r\nimport Version1 from './Version1';\r\nimport Version2 from './Version2';\r\n\r\n\r\n/*<Router>\r\n  <Menu>\r\n    <Switch>\r\n      <Route path=\"/\" exact component={props => <Version2 {...props} {...moreProps} />} />\r\n      <Route path=\"/version-1\" exact component={props => <Version1 {...props} {...moreProps} />} />\r\n      <Route path=\"/version-2\" exact component={props => <Version2 {...props} {...moreProps} />} />\r\n    </Switch>\r\n  </Menu>\r\n</Router>*/\r\n\r\n/*const Menu = props => \r\n  <>\r\n    <div>\r\n      <Link to=\"version-1\">\r\n        Version 1\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <Link to=\"version-2\">\r\n        Version 2\r\n      </Link>\r\n    </div>\r\n    {props.children}\r\n  </>*/\r\n\r\nconst Routes = () => {\r\n  const [rangeStartMin, setRangeStartMin] = useState(21);\r\n  const [rangeStartMax, setRangeStartMax] = useState(36);\r\n  const [rangeEndMin, setRangeEndMin] = useState(24);\r\n  const [rangeEndMax, setRangeEndMax] = useState(36);\r\n  const [defaultRangeStart, setDefaultRangeStart] = useState(21);\r\n  const [defaultRangeEnd, setDefaultRangeEnd] = useState(24);\r\n  const [rangeDiffLimit, setRangeDiffLimit] = useState(3);\r\n  const [step, setStep] = useState(1);\r\n  const [scale, setScale] = useState(15);\r\n  const moreProps = {\r\n    rangeStartMin,\r\n    rangeStartMax,\r\n    rangeEndMin,\r\n    rangeEndMax,\r\n    step,\r\n    scale,\r\n    defaultRangeStart,\r\n    defaultRangeEnd,\r\n    rangeDiffLimit\r\n  }\r\n  const updateInput = updateFunc => event => updateFunc(event.target.value);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Range Slider</h1>\r\n      <h2>Example!</h2>\r\n      <br /><label>Step</label><br/>\r\n      <input type=\"number\" value={step} onChange={updateInput(setStep)} />\r\n      <br /><label>Scale</label><br/>\r\n      <input type=\"number\" value={scale} onChange={updateInput(setScale)} />\r\n      <br /><label>Range Start Min </label><br/>\r\n      <input type=\"number\" value={rangeStartMin} onChange={updateInput(setRangeStartMin)} />\r\n      <br /><label>Default Range Start </label><br/>\r\n      <input type=\"number\" value={defaultRangeStart} onChange={updateInput(setDefaultRangeStart)} />\r\n      <br /><label>Range Start Max </label><br/>\r\n      <input type=\"number\" value={rangeStartMax} onChange={updateInput(setRangeStartMax)} />\r\n      <br /><label>Default Range End </label><br/>\r\n      <input type=\"number\" value={defaultRangeEnd} onChange={updateInput(setDefaultRangeEnd)} />\r\n      <br /><label>Range End Min</label><br/>\r\n      <input type=\"number\" value={rangeEndMin} onChange={updateInput(setRangeEndMin)} />\r\n      <br /><label>Range End Max</label><br/>\r\n      <input type=\"number\" value={rangeEndMax} onChange={updateInput(setRangeEndMax)} />\r\n      <br /><label>Range Difference</label><br/>\r\n      <input type=\"number\" value={rangeDiffLimit} onChange={updateInput(setRangeDiffLimit)} />\r\n      <Version2 {...moreProps} />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Routes;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Routes from './Routes';\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Routes />, rootElement);\r\n"],"sourceRoot":""}