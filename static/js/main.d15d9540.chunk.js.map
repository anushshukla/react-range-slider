{"version":3,"sources":["logo.svg","Pages/RangeSlider/Provider.js","Pages/RangeSlider/styles.js","Pages/RangeSlider/index.js","Pages/RangeSlider/View.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","WithDualRangeSliderHOC","Component","WithDualRangeSlider","props","wrapperRef","useRef","getUnit","scale","to","from","initialState","rangeSliderWidth","rangeStartLeft","defaultRangeStart","rangeEndLeft","defaultRangeEnd","activeRange","isTouchActive","_useState","useState","_useState2","Object","slicedToArray","state","setState","getLeftPercent","event","leftOffset","window","touches","clientX","pageX","currentTarget","getBoundingClientRect","left","getXFromEvent","getRoundedLeft","percent","Math","floor","setStateCb","updateState","latestState","objectSpread","onTouchEnd","getRangeStart","round","getRangeEnd","getRange","start","end","updateScreenSize","currentWindowWidth","innerWidth","document","documentElement","clientWidth","body","width","useEffect","current","addEventListener","removeEventListener","onAfterChange","react_default","a","createElement","assign","onTouchStart","_objectSpread2","abs","defineProperty","rangeDiffLimit","onMove","selectedRangeWidth","isActiveRange","range","getSliderIconDiameter","defaultProps","memo","DualRangeSliderSection","styled","div","_templateObject","Flex","_templateObject2","RangeValue","_templateObject3","_ref","_ref$textAlign","textAlign","SliderLineContainer","_templateObject4","SliderLineWrapper","_templateObject5","SliderLine","_templateObject6","height","SelectedSliderLine","_templateObject7","SliderIcon","_templateObject8","_ref2","_ref2$scale","concat","_ref3","top","_ref4","diameter","_ref5","LeftSliderIcon","_templateObject9","_ref6","RightSliderIcon","_templateObject10","_ref7","positionFrom","positionAt","SliderWithDrag","Provider","_eventListners","isTouchSupported","up","move","eventListners","sliderIconScaling","sliderIconPosTop","ref","className","RangeSlider","Pages_RangeSlider","rangeStartMin","setRangeStartMin","_useState3","_useState4","rangeStartMax","setRangeStartMax","_useState5","_useState6","rangeEndMin","setRangeEndMin","_useState7","_useState8","rangeEndMax","setRangeEndMax","_useState9","_useState10","setDefaultRangeStart","_useState11","_useState12","setDefaultRangeEnd","_useState13","_useState14","setRangeDiffLimit","_useState15","_useState16","setTo","_useState17","_useState18","setFrom","_useState19","_useState20","setScale","_useState21","response","_useState22","moreProps","computedScale","updateInput","updateFunc","target","value","type","onChange","RangeSlider_RangeSlider","JSON","stringify","routes","react_router_dom","react_router","path","exact","component","App","src","logo","alt","href","rel","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d15d9540.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect, useRef, memo } from \"react\";\n\nconst WithDualRangeSliderHOC = Component => {\n  const WithDualRangeSlider = props => {\n    const wrapperRef = useRef(null);\n    const getScale = () => props.scale || props.to - props.from;\n    const getUnit = () => 100 / getScale();\n    const initialState = {\n      rangeSliderWidth: 0,\n      rangeStartLeft: getUnit() * (props.defaultRangeStart - props.from),\n      rangeEndLeft: getUnit() * (props.defaultRangeEnd - props.from),\n      activeRange: '',\n      isTouchActive: false,\n    };\n    const [state, setState] = useState(initialState);\n    const getXFromEvent = event => {\n      const leftAbsolute = !!('ontouchstart' in window) ? event.touches[0].clientX : event.pageX;\n      const leftOffset = leftAbsolute - event.currentTarget.getBoundingClientRect().left;\n      if (leftOffset > state.rangeSliderWidth) {\n        return state.rangeSliderWidth;\n      } else if (leftOffset < 0) {\n        return 0;\n      } else {\n        return leftOffset;\n      }\n    }\n    const getLeftPercent = event =>\n      getXFromEvent(event) / state.rangeSliderWidth * 100;\n    const getRoundedLeft = (percent, activeRange) => Math.floor(percent/getUnit())*getUnit();\n    const setStateCb = updateState => latestState => ({\n      ...latestState,\n      ...updateState\n    }) \n    const onTouchStart = event => {\n      const left = getLeftPercent(event);\n      const { rangeStartLeft, rangeEndLeft }  = state;\n      const rangeStartLeftDiff = Math.abs(rangeStartLeft - left);\n      const rangeEndLeftDiff = Math.abs(rangeEndLeft - left);\n      const activeRange = rangeStartLeftDiff < rangeEndLeftDiff ? 'rangeStartLeft' : 'rangeEndLeft';\n      const updateState = { ...state, [activeRange]: getRoundedLeft(left, activeRange), activeRange, isTouchActive: true };\n      const rangeDiff = Math.abs(getRangeStart(updateState) - getRangeEnd(updateState));\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onMove = event => {\n      if (!state.isTouchActive) return;\n      const left = getLeftPercent(event);\n      const updateState = { ...state, [state.activeRange]: getRoundedLeft(left, state.activeRange) };\n      const rangeDiff = getRangeEnd(updateState) - getRangeStart(updateState);\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onTouchEnd = event => {\n      const updateState = { activeRange: '', isTouchActive: false };\n      setState(setStateCb(updateState));\n    }\n    const getSelectedRangeWidth = () => state.rangeEndLeft - state.rangeStartLeft;\n    const getRangeStart = () =>\n      Math.round(state.rangeStartLeft / getUnit() + props.from);\n    const getRangeEnd = () =>\n      Math.round(state.rangeEndLeft / getUnit() + props.from);\n    const getRange = () => ({\n      start: getRangeStart(),\n      end: getRangeEnd()\n    })\n    const updateScreenSize = event => {\n      const currentWindowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      setState(setStateCb({ window: { width: currentWindowWidth } }));\n    }\n    const getSliderIconDiameter = () => Math.floor(getUnit() * state.rangeSliderWidth / 100) - 1;\n    const isActiveRange = range => state.activeRange === range;\n    useEffect(() => {\n      const { width: rangeSliderWidth } = wrapperRef.current.getBoundingClientRect();\n      const updateState = { ...state, rangeSliderWidth: rangeSliderWidth };\n      setState(updateState);\n      window.addEventListener('mouseup', onTouchEnd, false);\n      window.addEventListener(\"resize\", updateScreenSize, false);\n      window.addEventListener(\"orientationchange\", updateScreenSize, false);\n      return () => {\n        window.removeEventListener('mouseup', onTouchEnd);\n        window.removeEventListener('resize', updateScreenSize);\n        window.removeEventListener('orientationchange', updateScreenSize);\n      }\n    }, {});\n    /*\n     * below use effect gets called only\n     * if rangeStartLeft (state), rangeEndLeft (state) or from (props) gets changed\n     * as getRange is calculated upon it\n     * and onAfterChange (props) hook is to be called when getRange value changes\n     */\n    // \n    useEffect(() => {\n      props.onAfterChange(getRange());\n    }, [state.rangeStartLeft, state.rangeEndLeft, props.from])\n    return <Component\n        onTouchStart={onTouchStart}\n        onMove={onMove}\n        onTouchEnd={onTouchEnd}\n        selectedRangeWidth={getSelectedRangeWidth()}\n        {...state}\n        isActiveRange={isActiveRange}\n        getRange={getRange}\n        getSliderIconDiameter={getSliderIconDiameter}\n        wrapperRef={wrapperRef}\n        {...props}\n      />\n  }\n  WithDualRangeSlider.defaultProps = {\n    defaultRangeStart: 0,\n    defaultRangeEnd: 0,\n    onAfterChange(){}\n  }\n  return memo(WithDualRangeSlider);\n};\n\nexport default WithDualRangeSliderHOC;","import styled from 'styled-components';\n\nexport const DualRangeSliderSection = styled.div`\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n  margin: 10px 0;\n`;\n\nexport const RangeValue = styled.div`\n  flex: 1;\n  text-align: ${({ textAlign = 'left' }) => textAlign};\n`;\n\nexport const SliderLineContainer = styled.div`\n  margin: 15px 0;\n`;\n\nexport const SliderLineWrapper = styled.div`\n  padding: 10px;\n`;\n\nexport const SliderLine = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  height: ${props => props.height};\n  background: #dfe0e3;\n  position: relative;\n`;\n\nexport const SelectedSliderLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => props.left};\n  width: ${props => props.width};\n  height: 2px;\n  background: #00bcd5;\n`;\n\nexport const SliderIcon = styled.div`\n  position: absolute;\n  top: -5px;\n  width: 12px;\n  height: 12px;\n  transform: ${({ scale = 1 }) => `scale(${scale})`};\n  background: #00bcd5;\n  border-radius: 50%;\n  box-shadow: -1px 0 2px #cfcfcf;\n  @media (max-width: 400px) {\n    top: ${({ top }) => top};\n    width: ${({ diameter }) => diameter};\n    height: ${({ diameter }) => diameter};\n  }\n`;\n\nexport const LeftSliderIcon = styled(SliderIcon)`\n  left: ${({ left }) => left};\n`;\n\nexport const RightSliderIcon = styled(SliderIcon)`\n  ${({ positionFrom, positionAt }) => `${positionFrom}: ${positionAt}`}\n`;","import React, { useState, useEffect } from \"react\";\nimport Provider from 'Pages/RangeSlider/Provider';\nimport View from 'Pages/RangeSlider/View';\n\nconst SliderWithDrag = Provider(View);\nconst RangeSlider = props => <SliderWithDrag  {...props} />\n\nexport default props => {\n  const [rangeStartMin, setRangeStartMin] = useState(21);\n  const [rangeStartMax, setRangeStartMax] = useState(36);\n  const [rangeEndMin, setRangeEndMin] = useState(24);\n  const [rangeEndMax, setRangeEndMax] = useState(36);\n  const [defaultRangeStart, setDefaultRangeStart] = useState(25);\n  const [defaultRangeEnd, setDefaultRangeEnd] = useState(29);\n  const [rangeDiffLimit, setRangeDiffLimit] = useState(3);\n  const [to, setTo] = useState(46);\n  const [from, setFrom] = useState(21);\n  const [scale, setScale] = useState(to - from);\n  const [state, setState] = useState({ response: {} });\n  const onAfterChange = response => setState({ response })\n  const moreProps = {\n    rangeStartMin,\n    rangeStartMax,\n    rangeEndMin,\n    rangeEndMax,\n    scale,\n    from,\n    to,\n    defaultRangeStart,\n    defaultRangeEnd,\n    rangeDiffLimit,\n    onAfterChange\n  }\n  useEffect(() => {\n    const computedScale = to - from;\n    computedScale !== scale && setScale(computedScale);\n  }, [to, from])\n  const updateInput = updateFunc => event => updateFunc(event.target.value);\n  return (\n    <div className=\"App\">\n      <h1>Range Slider</h1>\n      <h2>Example!</h2>\n      <br />\n      <br /><label>From</label><br/>\n      <input type=\"number\" value={from} onChange={updateInput(setFrom)} />\n      <br /><label>To</label><br/>\n      <input type=\"number\" value={to} onChange={updateInput(setTo)} />\n      <br />\n      <br />\n      <label>\n        Scale: {scale}\n        <br />(Difference between from and to\n        <br />which gets auto calculated\n        <br /> on changing from and to)\n      </label>\n      <br/>\n      <br/>\n      <label>Range Start Min <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMin} onChange={updateInput(setRangeStartMin)} />\n      <br /><label>Default Range Start </label><br/>\n      <input type=\"number\" value={defaultRangeStart} onChange={updateInput(setDefaultRangeStart)} />\n      <br /><label>Range Start Max  <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMax} onChange={updateInput(setRangeStartMax)} />\n      <br /><label>Default Range End  <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={defaultRangeEnd} onChange={updateInput(setDefaultRangeEnd)} />\n      <br /><label>Range End Min</label><br/>\n      <input type=\"number\" value={rangeEndMin} onChange={updateInput(setRangeEndMin)} />\n      <br /><label>Range End Max <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeEndMax} onChange={updateInput(setRangeEndMax)} />\n      <br /><label>Range Difference</label><br/>\n      <input type=\"number\" value={rangeDiffLimit} onChange={updateInput(setRangeDiffLimit)} />\n      <RangeSlider {...props} {...moreProps} />\n      <div>\n        onAfterChange props callback reponse\n        <br />\n        <code>\n          {JSON.stringify(state.response, null, 2) }\n        </code>\n      </div>\n    </div>\n  )\n};","import React, { memo } from \"react\";\nimport {\n  DualRangeSliderSection,\n  Flex,\n  RangeValue,\n  SliderLineContainer,\n  SliderLineWrapper,\n  SliderLine,\n  SelectedSliderLine,\n  LeftSliderIcon,\n  RightSliderIcon\n} from './styles';\n\nconst View = props => {\n  const isTouchSupported = !!('ontouchstart' in window);\n  const start = isTouchSupported ? 'onTouchStart' : 'onMouseDown';\n  const up = isTouchSupported ? 'onTouchEnd'   : 'onMouseUp';\n  const move = isTouchSupported ? 'onTouchMove'  : 'onMouseMove';\n  const {\n    getSliderIconDiameter,\n    onTouchStart,\n    onMove,\n    onTouchEnd,\n    isActiveRange,\n    getRange,\n    rangeStartLeft,\n    rangeEndLeft,\n    wrapperRef,\n    selectedRangeWidth\n  } = props;\n  const eventListners = {\n    [start]: onTouchStart,\n    [move]: onMove,\n    [up]: onTouchEnd,\n  };\n  const sliderIconScaling = activeRange => isActiveRange(activeRange) ? 2 : 1;\n  const sliderRangeHeight = 2;\n  const sliderIconPosTop = (getSliderIconDiameter() - sliderRangeHeight) / 2;\n  return (\n    <DualRangeSliderSection>\n      <Flex>\n        <RangeValue>From {getRange().start} years</RangeValue>\n        <RangeValue textAlign=\"right\">To {getRange().end} years</RangeValue>\n      </Flex>\n      <SliderLineContainer>\n        <SliderLineWrapper {...eventListners}>\n          <SliderLine ref={wrapperRef} height={`${sliderRangeHeight}px`} >\n            <SelectedSliderLine left={`${rangeStartLeft}%`} width={`${selectedRangeWidth}%`} />\n            <LeftSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              left={`${rangeStartLeft}%`}\n              scale={sliderIconScaling('rangeStartLeft')}\n            />\n            <RightSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              positionFrom={`${rangeEndLeft === 100 ? 'right' : 'left'}`}\n              positionAt={`${rangeEndLeft === 100 ? 0 : `${rangeEndLeft}%`}`}\n              scale={sliderIconScaling('rangeEndLeft')}\n            />\n          </SliderLine>\n        </SliderLineWrapper>\n      </SliderLineContainer>\n      <div className='range-ruler'>\n        <div className='range-start' />\n        <div className='range-end' />\n      </div>\n    </DualRangeSliderSection>\n  );\n};\n\nexport default memo(View);","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport RangeSlider from 'Pages/RangeSlider';\n\nexport default () =>  (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={RangeSlider} />\n      <Route path=\"/demo/range-slider\" exact component={RangeSlider} />\n    </Switch>\n  </Router>\n)\n","import React, { Component } from 'react';\nimport logo from 'logo.svg';\nimport 'App.css';\nimport Routes from 'routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}