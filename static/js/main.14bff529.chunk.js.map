{"version":3,"sources":["RangeSlider/Provider.js","RangeSlider/styles.js","RangeSlider/index.js","RangeSlider/View.js","Routes.js","index.js"],"names":["WithDualRangeSliderHOC","Component","WithDualRangeSlider","props","wrapperRef","useRef","getUnit","scale","to","from","initialState","rangeSliderWidth","rangeStartLeft","defaultRangeStart","rangeEndLeft","defaultRangeEnd","activeRange","isTouchActive","_useState","useState","_useState2","Object","slicedToArray","state","setState","useEffect","current","getBoundingClientRect","width","updateState","objectSpread","getLeft","event","Math","floor","leftOffset","window","touches","clientX","pageX","currentTarget","left","getXFromEvent","getRangeStart","currentState","round","getRangeEnd","getRange","start","end","react_default","a","createElement","assign","onTouchStart","_objectSpread2","preventDefault","abs","defineProperty","rangeDiffLimit","onMove","onTouchEnd","onAfterChange","selectedRangeWidth","isActiveRange","range","defaultProps","boxSize","memo","DualRangeSliderSection","styled","div","_templateObject","Flex","_templateObject2","RangeValue","_templateObject3","_ref","_ref$textAlign","textAlign","SliderLineContainer","_templateObject4","SliderLineWrapper","_templateObject5","SliderLine","_templateObject6","SelectedSliderLine","_templateObject7","SliderIcon","_templateObject8","_ref2","_ref3","_ref3$scale","concat","SliderWithDrag","Provider","_eventListners","isTouchSupported","up","move","eventListners","onMouseLeave","ref","className","console","log","Version2","Routes","rangeStartMin","setRangeStartMin","_useState3","_useState4","rangeStartMax","setRangeStartMax","_useState5","_useState6","rangeEndMin","setRangeEndMin","_useState7","_useState8","rangeEndMax","setRangeEndMax","_useState9","_useState10","setDefaultRangeStart","_useState11","_useState12","setDefaultRangeEnd","_useState13","_useState14","setRangeDiffLimit","_useState15","_useState16","setTo","_useState17","_useState18","setFrom","_useState19","_useState20","setScale","moreProps","computedScale","updateInput","updateFunc","target","value","type","onChange","RangeSlider","rootElement","document","getElementById","ReactDOM","render","src_Routes"],"mappings":"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","file":"static/js/main.14bff529.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, memo } from \"react\";\n\nconst WithDualRangeSliderHOC = Component => {\n  const WithDualRangeSlider = props => {\n    const wrapperRef = useRef(null);\n    const getScale = () => props.scale || props.to - props.from;\n    const getUnit = () => 100 / getScale();\n    const initialState = {\n      rangeSliderWidth: 0,\n      rangeStartLeft: getUnit() * (props.defaultRangeStart - props.from),\n      rangeEndLeft: getUnit() * (props.defaultRangeEnd - props.from),\n      activeRange: '',\n      isTouchActive: false,\n    };\n    const [state, setState] = useState(initialState);\n    useEffect(() => {\n      const { width: rangeSliderWidth } = wrapperRef.current.getBoundingClientRect();\n      const updateState = { ...state, rangeSliderWidth };\n      setState(updateState);\n    }, {});\n    const getXFromEvent = event => {\n      const leftAbsolute = !!('ontouchstart' in window) ? event.touches[0].clientX : event.pageX;\n      const leftOffset = leftAbsolute - event.currentTarget.getBoundingClientRect().left;\n      if (leftOffset > state.rangeSliderWidth) {\n        return state.rangeSliderWidth;\n      } else if (leftOffset < 0) {\n        return 0;\n      } else {\n        return leftOffset;\n      }\n    }\n    const getLeft = event =>\n      Math.floor(getXFromEvent(event) / state.rangeSliderWidth * 100 / getUnit()) * getUnit();\n    const onTouchStart = event => {\n      event.preventDefault();\n      const left = getLeft(event);\n      const { rangeStartLeft, rangeEndLeft }  = state;\n      const rangeStartLeftDiff = Math.abs(rangeStartLeft - left);\n      const rangeEndLeftDiff = Math.abs(rangeEndLeft - left);\n      const activeRange = rangeStartLeftDiff < rangeEndLeftDiff ? 'rangeStartLeft' : 'rangeEndLeft';\n      const updateState = { ...state, [activeRange]: left, activeRange, isTouchActive: true };\n      const rangeDiff = Math.abs(getRangeStart(updateState) - getRangeEnd(updateState));\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onMove = event => {\n      event.preventDefault();\n      if (!state.isTouchActive) return;\n      const left = getLeft(event);\n      const updateState = { ...state, [state.activeRange]: left };\n      const rangeDiff = getRangeEnd(updateState) - getRangeStart(updateState);\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onTouchEnd = event => {\n      event.preventDefault();\n      const updateState = { ...state, activeRange: '', isTouchActive: false };\n      setState(updateState);\n      props.onAfterChange(getRange());\n    }\n    const getSelectedRangeWidth = () => state.rangeEndLeft - state.rangeStartLeft;\n    const getRangeStart = currentState =>\n      Math.round(currentState.rangeStartLeft / getUnit() + props.from);\n    const getRangeEnd = currentState =>\n      Math.round(currentState.rangeEndLeft / getUnit() + props.from);\n    const getRange = () => ({\n      start: getRangeStart(state),\n      end: getRangeEnd(state)\n    })\n    const isActiveRange = range => state.activeRange === range;\n    return <Component\n        onTouchStart={onTouchStart}\n        onMove={onMove}\n        onTouchEnd={onTouchEnd}\n        selectedRangeWidth={getSelectedRangeWidth()}\n        {...state}\n        isActiveRange={isActiveRange}\n        getRange={getRange}\n        wrapperRef={wrapperRef}\n        {...props}\n      />\n  }\n  WithDualRangeSlider.defaultProps = {\n    defaultRangeStart: 50,\n    defaultRangeEnd: 8000,\n    boxSize: 270\n  }\n  return memo(WithDualRangeSlider);\n};\n\nexport default WithDualRangeSliderHOC;","import styled from 'styled-components';\n\nexport const DualRangeSliderSection = styled.div`\n  width: 90%;\n  margin: 0 auto;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n  margin: 10px 0;\n`;\n\nexport const RangeValue = styled.div`\n  flex: 1;\n  text-align: ${({ textAlign = 'left' }) => textAlign};\n`;\n\nexport const SliderLineContainer = styled.div`\n  margin: 15px 0;\n`;\n\nexport const SliderLineWrapper = styled.div`\n  padding: 10px;\n`;\n\nexport const SliderLine = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  height: 2px;\n  background: #dfe0e3;\n  position: relative;\n`;\n\nexport const SelectedSliderLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => props.left};\n  width: ${props => props.width};\n  height: 2px;\n  background: #00bcd5;\n`;\n\nexport const SliderIcon = styled.div`\n  position: absolute;\n  top: -5px;\n  left: ${({ left }) => left};\n  transform: ${({ scale = 1 }) => `scale(${scale})`};\n  height: 12px;\n  width: 12px;\n  background: #00bcd5;\n  border-radius: 50%;\n  box-shadow: -1px 0 2px #cfcfcf;\n`;","import React from \"react\";\nimport Provider from './Provider';\nimport View from './View';\n\nconst SliderWithDrag = Provider(View);\n\nconst onAfterChange = state => console.log(state);\n\nexport const Version2 = props => <SliderWithDrag onAfterChange={onAfterChange} {...props} />\n\nexport default Version2;","import React, { memo } from \"react\";\nimport {\n  DualRangeSliderSection,\n  Flex,\n  RangeValue,\n  SliderLineContainer,\n  SliderLineWrapper,\n  SliderLine,\n  SelectedSliderLine,\n  SliderIcon\n} from './styles';\n\nconst View = props => {\n  const isTouchSupported = !!('ontouchstart' in window);\n  const start = isTouchSupported ? 'onTouchStart' : 'onMouseDown';\n  const up = isTouchSupported ? 'onTouchEnd'   : 'onMouseUp';\n  const move = isTouchSupported ? 'onTouchMove'  : 'onMouseMove';\n  const eventListners = {\n    [start]: props.onTouchStart,\n    [move]: props.onMove,\n    [up]: props.onTouchEnd,\n  };\n  return (\n    <DualRangeSliderSection>\n      <Flex>\n        <RangeValue>From {props.getRange().start} years</RangeValue>\n        <RangeValue textAlign=\"right\">To {props.getRange().end} years</RangeValue>\n      </Flex>\n      <SliderLineContainer>\n        <SliderLineWrapper {...eventListners} onMouseLeave={props.onTouchEnd}>\n          <SliderLine ref={props.wrapperRef} >\n            <SelectedSliderLine left={`${props.rangeStartLeft}%`} width={`${props.selectedRangeWidth}%`} />\n            <SliderIcon\n              left={`${props.rangeStartLeft}%`}\n              scale={props.isActiveRange('rangeStartLeft') ? 2 : 1}\n            />\n            <SliderIcon\n              left={`${props.rangeEndLeft}%`}\n              scale={props.isActiveRange('rangeEndLeft') ? 2 : 1}\n            />\n          </SliderLine>\n        </SliderLineWrapper>\n      </SliderLineContainer>\n      <div className='range-ruler'>\n        <div className='range-start' />\n        <div className='range-end' />\n      </div>\n    </DualRangeSliderSection>\n  );\n};\n\nexport default memo(View);","import React, { useState, useEffect } from \"react\";\nimport RangeSlider from './RangeSlider';\nimport \"./styles.css\";\n\nconst Routes = () => {\n  const [rangeStartMin, setRangeStartMin] = useState(21);\n  const [rangeStartMax, setRangeStartMax] = useState(36);\n  const [rangeEndMin, setRangeEndMin] = useState(24);\n  const [rangeEndMax, setRangeEndMax] = useState(36);\n  const [defaultRangeStart, setDefaultRangeStart] = useState(25);\n  const [defaultRangeEnd, setDefaultRangeEnd] = useState(29);\n  const [rangeDiffLimit, setRangeDiffLimit] = useState(3);\n  const [to, setTo] = useState(46);\n  const [from, setFrom] = useState(21);\n  const [scale, setScale] = useState(to - from);\n  const moreProps = {\n    rangeStartMin,\n    rangeStartMax,\n    rangeEndMin,\n    rangeEndMax,\n    scale,\n    from,\n    to,\n    defaultRangeStart,\n    defaultRangeEnd,\n    rangeDiffLimit\n  }\n  useEffect(() => {\n    const computedScale = to - from;\n    computedScale !== scale && setScale(computedScale);\n  }, [to, from])\n  const updateInput = updateFunc => event => updateFunc(event.target.value);\n  return (\n    <div className=\"App\">\n      <h1>Range Slider</h1>\n      <h2>Example!</h2>\n      <br /><label>Scale <br />(Difference between from and to which gets auto calculated on changing from and to)</label><br/>\n      <input type=\"number\" value={scale} onChange={updateInput(setScale)} />\n      <br /><label>From</label><br/>\n      <input type=\"number\" value={from} onChange={updateInput(setFrom)} />\n      <br /><label>To</label><br/>\n      <input type=\"number\" value={to} onChange={updateInput(setTo)} />\n      <br /><label>Range Start Min (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMin} onChange={updateInput(setRangeStartMin)} />\n      <br /><label>Default Range Start </label><br/>\n      <input type=\"number\" value={defaultRangeStart} onChange={updateInput(setDefaultRangeStart)} />\n      <br /><label>Range Start Max  (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMax} onChange={updateInput(setRangeStartMax)} />\n      <br /><label>Default Range End  (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={defaultRangeEnd} onChange={updateInput(setDefaultRangeEnd)} />\n      <br /><label>Range End Min</label><br/>\n      <input type=\"number\" value={rangeEndMin} onChange={updateInput(setRangeEndMin)} />\n      <br /><label>Range End Max (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeEndMax} onChange={updateInput(setRangeEndMax)} />\n      <br /><label>Range Difference</label><br/>\n      <input type=\"number\" value={rangeDiffLimit} onChange={updateInput(setRangeDiffLimit)} />\n      <RangeSlider {...moreProps} />\n    </div>\n  )\n};\n\nexport default Routes;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from './Routes';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Routes />, rootElement);\n"],"sourceRoot":""}