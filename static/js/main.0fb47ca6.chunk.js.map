{"version":3,"sources":["RangeSlider/Provider.js","RangeSlider/styles.js","RangeSlider/index.js","RangeSlider/View.js","Routes.js","index.js"],"names":["WithDualRangeSliderHOC","Component","WithDualRangeSlider","props","wrapperRef","useRef","getUnit","scale","to","from","initialState","rangeSliderWidth","rangeStartLeft","defaultRangeStart","rangeEndLeft","defaultRangeEnd","activeRange","isTouchActive","_useState","useState","_useState2","Object","slicedToArray","state","setState","getLeftPercent","event","leftOffset","window","touches","clientX","pageX","currentTarget","getBoundingClientRect","left","getXFromEvent","getRoundedLeft","percent","Math","floor","getRangeStart","currentState","round","getRangeEnd","getRange","start","end","useEffect","current","width","updateState","objectSpread","react_default","a","createElement","assign","onTouchStart","_objectSpread2","preventDefault","abs","defineProperty","rangeDiffLimit","onMove","onTouchEnd","onAfterChange","selectedRangeWidth","isActiveRange","range","getSliderIconDiameter","defaultProps","memo","DualRangeSliderSection","styled","div","_templateObject","Flex","_templateObject2","RangeValue","_templateObject3","_ref","_ref$textAlign","textAlign","SliderLineContainer","_templateObject4","SliderLineWrapper","_templateObject5","SliderLine","_templateObject6","height","SelectedSliderLine","_templateObject7","SliderIcon","_templateObject8","_ref2","_ref2$scale","concat","_ref3","top","_ref4","diameter","_ref5","LeftSliderIcon","_templateObject9","_ref6","RightSliderIcon","_templateObject10","_ref7","positionFrom","positionAt","SliderWithDrag","Provider","_eventListners","isTouchSupported","up","move","eventListners","sliderIconScaling","sliderIconPosTop","ref","className","console","log","Version2","Routes","rangeStartMin","setRangeStartMin","_useState3","_useState4","rangeStartMax","setRangeStartMax","_useState5","_useState6","rangeEndMin","setRangeEndMin","_useState7","_useState8","rangeEndMax","setRangeEndMax","_useState9","_useState10","setDefaultRangeStart","_useState11","_useState12","setDefaultRangeEnd","_useState13","_useState14","setRangeDiffLimit","_useState15","_useState16","setTo","_useState17","_useState18","setFrom","_useState19","_useState20","setScale","moreProps","computedScale","updateInput","updateFunc","target","value","type","onChange","RangeSlider","rootElement","document","getElementById","ReactDOM","render","src_Routes"],"mappings":"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","file":"static/js/main.0fb47ca6.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, memo } from \"react\";\n\nconst WithDualRangeSliderHOC = Component => {\n  const WithDualRangeSlider = props => {\n    const wrapperRef = useRef(null);\n    const getScale = () => props.scale || props.to - props.from;\n    const getUnit = () => 100 / getScale();\n    const initialState = {\n      rangeSliderWidth: 0,\n      rangeStartLeft: getUnit() * (props.defaultRangeStart - props.from),\n      rangeEndLeft: getUnit() * (props.defaultRangeEnd - props.from),\n      activeRange: '',\n      isTouchActive: false,\n    };\n    const [state, setState] = useState(initialState);\n    const getXFromEvent = event => {\n      const leftAbsolute = !!('ontouchstart' in window) ? event.touches[0].clientX : event.pageX;\n      const leftOffset = leftAbsolute - event.currentTarget.getBoundingClientRect().left;\n      if (leftOffset > state.rangeSliderWidth) {\n        return state.rangeSliderWidth;\n      } else if (leftOffset < 0) {\n        return 0;\n      } else {\n        return leftOffset;\n      }\n    }\n    const getLeftPercent = event =>\n      getXFromEvent(event) / state.rangeSliderWidth * 100;\n    // const getRoundedLeft = (percent, activeRange) => Math[activeRange === 'rangeStartLeft' ? 'floor' : 'ceil'](percent/getUnit())*getUnit();\n    const getRoundedLeft = (percent, activeRange) => Math.floor(percent/getUnit())*getUnit();\n    const onTouchStart = event => {\n      event.preventDefault();\n      const left = getLeftPercent(event);\n      const { rangeStartLeft, rangeEndLeft }  = state;\n      const rangeStartLeftDiff = Math.abs(rangeStartLeft - left);\n      const rangeEndLeftDiff = Math.abs(rangeEndLeft - left);\n      const activeRange = rangeStartLeftDiff < rangeEndLeftDiff ? 'rangeStartLeft' : 'rangeEndLeft';\n      const updateState = { ...state, [activeRange]: getRoundedLeft(left, activeRange), activeRange, isTouchActive: true };\n      const rangeDiff = Math.abs(getRangeStart(updateState) - getRangeEnd(updateState));\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onMove = event => {\n      event.preventDefault();\n      if (!state.isTouchActive) return;\n      const left = getLeftPercent(event);\n      const updateState = { ...state, [state.activeRange]: getRoundedLeft(left, state.activeRange) };\n      const rangeDiff = getRangeEnd(updateState) - getRangeStart(updateState);\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onTouchEnd = event => {\n      event.preventDefault();\n      const updateState = { ...state, activeRange: '', isTouchActive: false };\n      setState(updateState);\n      props.onAfterChange(getRange());\n    }\n    const getSelectedRangeWidth = () => state.rangeEndLeft - state.rangeStartLeft;\n    const getRangeStart = currentState =>\n      Math.round(currentState.rangeStartLeft / getUnit() + props.from);\n    const getRangeEnd = currentState =>\n      Math.round(currentState.rangeEndLeft / getUnit() + props.from);\n    const getRange = () => ({\n      start: getRangeStart(state),\n      end: getRangeEnd(state)\n    })\n    const getSliderIconDiameter = () => Math.floor(getUnit() * state.rangeSliderWidth / 100) - 1;\n    const isActiveRange = range => state.activeRange === range;\n    useEffect(() => {\n      const { width: rangeSliderWidth } = wrapperRef.current.getBoundingClientRect();\n      const updateState = { ...state, rangeSliderWidth: rangeSliderWidth };\n      // window.addEventListener('mouseup', onTouchEnd, false);\n      setState(updateState);\n      // return () => window.removeEventListener('mouseup', onTouchEnd, false);\n    }, {});\n    return <Component\n        onTouchStart={onTouchStart}\n        onMove={onMove}\n        onTouchEnd={onTouchEnd}\n        selectedRangeWidth={getSelectedRangeWidth()}\n        {...state}\n        isActiveRange={isActiveRange}\n        getRange={getRange}\n        getSliderIconDiameter={getSliderIconDiameter}\n        wrapperRef={wrapperRef}\n        {...props}\n      />\n  }\n  WithDualRangeSlider.defaultProps = {\n    defaultRangeStart: 0,\n    defaultRangeEnd: 0,\n  }\n  return memo(WithDualRangeSlider);\n};\n\nexport default WithDualRangeSliderHOC;","import styled from 'styled-components';\n\nexport const DualRangeSliderSection = styled.div`\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n  margin: 10px 0;\n`;\n\nexport const RangeValue = styled.div`\n  flex: 1;\n  text-align: ${({ textAlign = 'left' }) => textAlign};\n`;\n\nexport const SliderLineContainer = styled.div`\n  margin: 15px 0;\n`;\n\nexport const SliderLineWrapper = styled.div`\n  padding: 10px;\n`;\n\nexport const SliderLine = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  height: ${props => props.height};\n  background: #dfe0e3;\n  position: relative;\n`;\n\nexport const SelectedSliderLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => props.left};\n  width: ${props => props.width};\n  height: 2px;\n  background: #00bcd5;\n`;\n\nexport const SliderIcon = styled.div`\n  position: absolute;\n  top: -5px;\n  width: 12px;\n  height: 12px;\n  transform: ${({ scale = 1 }) => `scale(${scale})`};\n  background: #00bcd5;\n  border-radius: 50%;\n  box-shadow: -1px 0 2px #cfcfcf;\n  @media (max-width: 400px) {\n    top: ${({ top }) => top};\n    width: ${({ diameter }) => diameter};\n    height: ${({ diameter }) => diameter};\n  }\n`;\n\nexport const LeftSliderIcon = styled(SliderIcon)`\n  left: ${({ left }) => left};\n`;\n\nexport const RightSliderIcon = styled(SliderIcon)`\n  ${({ positionFrom, positionAt }) => `${positionFrom}: ${positionAt}`}\n`;","import React from \"react\";\nimport Provider from './Provider';\nimport View from './View';\n\nconst SliderWithDrag = Provider(View);\n\nconst onAfterChange = state => console.log(state);\n\nexport const Version2 = props => <SliderWithDrag onAfterChange={onAfterChange} {...props} />\n\nexport default Version2;","import React, { memo } from \"react\";\nimport {\n  DualRangeSliderSection,\n  Flex,\n  RangeValue,\n  SliderLineContainer,\n  SliderLineWrapper,\n  SliderLine,\n  SelectedSliderLine,\n  LeftSliderIcon,\n  RightSliderIcon\n} from './styles';\n\nconst View = props => {\n  const isTouchSupported = !!('ontouchstart' in window);\n  const start = isTouchSupported ? 'onTouchStart' : 'onMouseDown';\n  const up = isTouchSupported ? 'onTouchEnd'   : 'onMouseUp';\n  const move = isTouchSupported ? 'onTouchMove'  : 'onMouseMove';\n  const {\n    getSliderIconDiameter,\n    onTouchStart,\n    onMove,\n    onTouchEnd,\n    isActiveRange,\n    getRange,\n    rangeStartLeft,\n    rangeEndLeft,\n    wrapperRef,\n    selectedRangeWidth\n  } = props;\n  const eventListners = {\n    [start]: onTouchStart,\n    [move]: onMove,\n    [up]: onTouchEnd,\n  };\n  const sliderIconScaling = activeRange => isActiveRange(activeRange) ? 2 : 1;\n  const sliderRangeHeight = 2;\n  const sliderIconPosTop = (getSliderIconDiameter() - sliderRangeHeight) / 2;\n  return (\n    <DualRangeSliderSection>\n      <Flex>\n        <RangeValue>From {getRange().start} years</RangeValue>\n        <RangeValue textAlign=\"right\">To {getRange().end} years</RangeValue>\n      </Flex>\n      <SliderLineContainer>\n        <SliderLineWrapper {...eventListners}>\n          <SliderLine ref={wrapperRef} height={`${sliderRangeHeight}px`} >\n            <SelectedSliderLine left={`${rangeStartLeft}%`} width={`${selectedRangeWidth}%`} />\n            <LeftSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              left={`${rangeStartLeft}%`}\n              scale={sliderIconScaling('rangeStartLeft')}\n            />\n            <RightSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              positionFrom={`${rangeEndLeft === 100 ? 'right' : 'left'}`}\n              positionAt={`${rangeEndLeft === 100 ? 0 : `${rangeEndLeft}%`}`}\n              scale={sliderIconScaling('rangeEndLeft')}\n            />\n          </SliderLine>\n        </SliderLineWrapper>\n      </SliderLineContainer>\n      <div className='range-ruler'>\n        <div className='range-start' />\n        <div className='range-end' />\n      </div>\n    </DualRangeSliderSection>\n  );\n};\n\nexport default memo(View);","import React, { useState, useEffect } from \"react\";\nimport RangeSlider from './RangeSlider';\nimport \"./styles.css\";\n\nconst Routes = () => {\n  const [rangeStartMin, setRangeStartMin] = useState(21);\n  const [rangeStartMax, setRangeStartMax] = useState(36);\n  const [rangeEndMin, setRangeEndMin] = useState(24);\n  const [rangeEndMax, setRangeEndMax] = useState(36);\n  const [defaultRangeStart, setDefaultRangeStart] = useState(25);\n  const [defaultRangeEnd, setDefaultRangeEnd] = useState(29);\n  const [rangeDiffLimit, setRangeDiffLimit] = useState(3);\n  const [to, setTo] = useState(46);\n  const [from, setFrom] = useState(21);\n  const [scale, setScale] = useState(to - from);\n  const moreProps = {\n    rangeStartMin,\n    rangeStartMax,\n    rangeEndMin,\n    rangeEndMax,\n    scale,\n    from,\n    to,\n    defaultRangeStart,\n    defaultRangeEnd,\n    rangeDiffLimit\n  }\n  useEffect(() => {\n    const computedScale = to - from;\n    computedScale !== scale && setScale(computedScale);\n  }, [to, from])\n  const updateInput = updateFunc => event => updateFunc(event.target.value);\n  return (\n    <div className=\"App\">\n      <h1>Range Slider</h1>\n      <h2>Example!</h2>\n      <br /><label>Scale <br />(Difference between from and to which gets auto calculated on changing from and to)</label><br/>\n      <input type=\"number\" value={scale} onChange={updateInput(setScale)} />\n      <br /><label>From</label><br/>\n      <input type=\"number\" value={from} onChange={updateInput(setFrom)} />\n      <br /><label>To</label><br/>\n      <input type=\"number\" value={to} onChange={updateInput(setTo)} />\n      <br /><label>Range Start Min (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMin} onChange={updateInput(setRangeStartMin)} />\n      <br /><label>Default Range Start </label><br/>\n      <input type=\"number\" value={defaultRangeStart} onChange={updateInput(setDefaultRangeStart)} />\n      <br /><label>Range Start Max  (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMax} onChange={updateInput(setRangeStartMax)} />\n      <br /><label>Default Range End  (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={defaultRangeEnd} onChange={updateInput(setDefaultRangeEnd)} />\n      <br /><label>Range End Min</label><br/>\n      <input type=\"number\" value={rangeEndMin} onChange={updateInput(setRangeEndMin)} />\n      <br /><label>Range End Max (Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeEndMax} onChange={updateInput(setRangeEndMax)} />\n      <br /><label>Range Difference</label><br/>\n      <input type=\"number\" value={rangeDiffLimit} onChange={updateInput(setRangeDiffLimit)} />\n      <RangeSlider {...moreProps} />\n    </div>\n  )\n};\n\nexport default Routes;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from './Routes';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Routes />, rootElement);\n"],"sourceRoot":""}