{"version":3,"sources":["Pages/RangeSlider/Provider.js","Pages/RangeSlider/styles.js","Pages/RangeSlider/index.js","Pages/RangeSlider/View.js","index.js","Routes.js"],"names":["WithDualRangeSliderHOC","Component","WithDualRangeSlider","props","wrapperRef","useRef","getUnit","scale","to","from","initialState","rangeSliderWidth","rangeStartLeft","defaultRangeStart","rangeEndLeft","defaultRangeEnd","activeRange","isTouchActive","_useState","useState","_useState2","Object","slicedToArray","state","setState","getLeftPercent","event","leftOffset","window","touches","clientX","pageX","currentTarget","getBoundingClientRect","left","getXFromEvent","getRoundedLeft","percent","Math","floor","setStateCb","updateState","latestState","objectSpread","onTouchEnd","getRangeStart","round","getRangeEnd","getRange","start","end","updateScreenSize","currentWindowWidth","innerWidth","document","documentElement","clientWidth","body","width","useEffect","current","addEventListener","removeEventListener","onAfterChange","console","error","react_default","a","createElement","assign","onTouchStart","_objectSpread2","abs","defineProperty","rangeDiffLimit","onMove","selectedRangeWidth","isActiveRange","range","getSliderIconDiameter","defaultProps","memo","DualRangeSliderSection","styled","div","_templateObject","Flex","_templateObject2","RangeValue","_templateObject3","_ref","_ref$textAlign","textAlign","SliderLineContainer","_templateObject4","SliderLineWrapper","_templateObject5","SliderLine","_templateObject6","height","SelectedSliderLine","_templateObject7","SliderIcon","_templateObject8","_ref2","_ref2$scale","concat","_ref3","top","_ref4","diameter","_ref5","LeftSliderIcon","_templateObject9","_ref6","RightSliderIcon","_templateObject10","_ref7","positionFrom","positionAt","SliderWithDrag","Provider","_eventListners","isTouchSupported","up","move","eventListners","sliderIconScaling","sliderIconPosTop","ref","className","RangeSlider","Pages_RangeSlider","rangeStartMin","setRangeStartMin","_useState3","_useState4","rangeStartMax","setRangeStartMax","_useState5","_useState6","rangeEndMin","setRangeEndMin","_useState7","_useState8","rangeEndMax","setRangeEndMax","_useState9","_useState10","setDefaultRangeStart","_useState11","_useState12","setDefaultRangeEnd","_useState13","_useState14","setRangeDiffLimit","_useState15","_useState16","setTo","_useState17","_useState18","setFrom","_useState19","_useState20","setScale","_useState21","response","_useState22","moreProps","computedScale","updateInput","updateFunc","target","value","type","onChange","RangeSlider_RangeSlider","JSON","stringify","rootElement","getElementById","ReactDOM","render","BrowserRouter","Switch","Route","path","exact","component"],"mappings":"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","file":"static/js/main.182c002a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, memo } from \"react\";\n\nconst WithDualRangeSliderHOC = Component => {\n  const WithDualRangeSlider = props => {\n    const wrapperRef = useRef(null);\n    const getScale = () => props.scale || props.to - props.from;\n    const getUnit = () => 100 / getScale();\n    const initialState = {\n      rangeSliderWidth: 0,\n      rangeStartLeft: getUnit() * (props.defaultRangeStart - props.from),\n      rangeEndLeft: getUnit() * (props.defaultRangeEnd - props.from),\n      activeRange: '',\n      isTouchActive: false,\n    };\n    const [state, setState] = useState(initialState);\n    const getXFromEvent = event => {\n      const leftAbsolute = !!('ontouchstart' in window) ? event.touches[0].clientX : event.pageX;\n      const leftOffset = leftAbsolute - event.currentTarget.getBoundingClientRect().left;\n      if (leftOffset > state.rangeSliderWidth) {\n        return state.rangeSliderWidth;\n      } else if (leftOffset < 0) {\n        return 0;\n      } else {\n        return leftOffset;\n      }\n    }\n    const getLeftPercent = event =>\n      getXFromEvent(event) / state.rangeSliderWidth * 100;\n    const getRoundedLeft = (percent, activeRange) => Math.floor(percent/getUnit())*getUnit();\n    const setStateCb = updateState => latestState => ({\n      ...latestState,\n      ...updateState\n    }) \n    const onTouchStart = event => {\n      const left = getLeftPercent(event);\n      const { rangeStartLeft, rangeEndLeft }  = state;\n      const rangeStartLeftDiff = Math.abs(rangeStartLeft - left);\n      const rangeEndLeftDiff = Math.abs(rangeEndLeft - left);\n      const activeRange = rangeStartLeftDiff < rangeEndLeftDiff ? 'rangeStartLeft' : 'rangeEndLeft';\n      const updateState = { ...state, [activeRange]: getRoundedLeft(left, activeRange), activeRange, isTouchActive: true };\n      const rangeDiff = Math.abs(getRangeStart(updateState) - getRangeEnd(updateState));\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onMove = event => {\n      if (!state.isTouchActive) return;\n      const left = getLeftPercent(event);\n      const updateState = { ...state, [state.activeRange]: getRoundedLeft(left, state.activeRange) };\n      const rangeDiff = getRangeEnd(updateState) - getRangeStart(updateState);\n      const canMove = rangeDiff >= props.rangeDiffLimit;\n      if (!canMove) return;\n      setState(updateState);\n    }\n    const onTouchEnd = event => {\n      const updateState = { activeRange: '', isTouchActive: false };\n      setState(setStateCb(updateState));\n    }\n    const getSelectedRangeWidth = () => state.rangeEndLeft - state.rangeStartLeft;\n    const getRangeStart = () =>\n      Math.round(state.rangeStartLeft / getUnit() + props.from);\n    const getRangeEnd = () =>\n      Math.round(state.rangeEndLeft / getUnit() + props.from);\n    const getRange = () => ({\n      start: getRangeStart(),\n      end: getRangeEnd()\n    })\n    const updateScreenSize = event => {\n      const currentWindowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      setState(setStateCb({ window: { width: currentWindowWidth } }));\n    }\n    const getSliderIconDiameter = () => Math.floor(getUnit() * state.rangeSliderWidth / 100) - 1;\n    const isActiveRange = range => state.activeRange === range;\n    useEffect(() => {\n      const { width: rangeSliderWidth } = wrapperRef.current.getBoundingClientRect();\n      const updateState = { ...state, rangeSliderWidth: rangeSliderWidth };\n      setState(updateState);\n      window.addEventListener('mouseup', onTouchEnd, false);\n      window.addEventListener(\"resize\", updateScreenSize, false);\n      window.addEventListener(\"orientationchange\", updateScreenSize, false);\n      return () => {\n        window.removeEventListener('mouseup', onTouchEnd);\n        window.removeEventListener('resize', updateScreenSize);\n        window.removeEventListener('orientationchange', updateScreenSize);\n      }\n    }, {});\n    useEffect(() => {\n      props.onAfterChange(getRange());\n      console.error('yess')\n    }, [state.rangeStartLeft, state.rangeEndLeft, props.from])\n    return <Component\n        onTouchStart={onTouchStart}\n        onMove={onMove}\n        onTouchEnd={onTouchEnd}\n        selectedRangeWidth={getSelectedRangeWidth()}\n        {...state}\n        isActiveRange={isActiveRange}\n        getRange={getRange}\n        getSliderIconDiameter={getSliderIconDiameter}\n        wrapperRef={wrapperRef}\n        {...props}\n      />\n  }\n  WithDualRangeSlider.defaultProps = {\n    defaultRangeStart: 0,\n    defaultRangeEnd: 0,\n    onAfterChange(){}\n  }\n  return memo(WithDualRangeSlider);\n};\n\nexport default WithDualRangeSliderHOC;","import styled from 'styled-components';\n\nexport const DualRangeSliderSection = styled.div`\n  width: 100%;\n  margin: 0 auto;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-content: space-between;\n  margin: 10px 0;\n`;\n\nexport const RangeValue = styled.div`\n  flex: 1;\n  text-align: ${({ textAlign = 'left' }) => textAlign};\n`;\n\nexport const SliderLineContainer = styled.div`\n  margin: 15px 0;\n`;\n\nexport const SliderLineWrapper = styled.div`\n  padding: 10px;\n`;\n\nexport const SliderLine = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  height: ${props => props.height};\n  background: #dfe0e3;\n  position: relative;\n`;\n\nexport const SelectedSliderLine = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${props => props.left};\n  width: ${props => props.width};\n  height: 2px;\n  background: #00bcd5;\n`;\n\nexport const SliderIcon = styled.div`\n  position: absolute;\n  top: -5px;\n  width: 12px;\n  height: 12px;\n  transform: ${({ scale = 1 }) => `scale(${scale})`};\n  background: #00bcd5;\n  border-radius: 50%;\n  box-shadow: -1px 0 2px #cfcfcf;\n  @media (max-width: 400px) {\n    top: ${({ top }) => top};\n    width: ${({ diameter }) => diameter};\n    height: ${({ diameter }) => diameter};\n  }\n`;\n\nexport const LeftSliderIcon = styled(SliderIcon)`\n  left: ${({ left }) => left};\n`;\n\nexport const RightSliderIcon = styled(SliderIcon)`\n  ${({ positionFrom, positionAt }) => `${positionFrom}: ${positionAt}`}\n`;","import React, { useState, useEffect } from \"react\";\nimport Provider from 'Pages/RangeSlider/Provider';\nimport View from 'Pages/RangeSlider/View';\n\nconst SliderWithDrag = Provider(View);\nconst RangeSlider = props => <SliderWithDrag  {...props} />\n\nexport default props => {\n  const [rangeStartMin, setRangeStartMin] = useState(21);\n  const [rangeStartMax, setRangeStartMax] = useState(36);\n  const [rangeEndMin, setRangeEndMin] = useState(24);\n  const [rangeEndMax, setRangeEndMax] = useState(36);\n  const [defaultRangeStart, setDefaultRangeStart] = useState(25);\n  const [defaultRangeEnd, setDefaultRangeEnd] = useState(29);\n  const [rangeDiffLimit, setRangeDiffLimit] = useState(3);\n  const [to, setTo] = useState(46);\n  const [from, setFrom] = useState(21);\n  const [scale, setScale] = useState(to - from);\n  const [state, setState] = useState({ response: {} });\n  const onAfterChange = response => setState({ response })\n  const moreProps = {\n    rangeStartMin,\n    rangeStartMax,\n    rangeEndMin,\n    rangeEndMax,\n    scale,\n    from,\n    to,\n    defaultRangeStart,\n    defaultRangeEnd,\n    rangeDiffLimit,\n    onAfterChange\n  }\n  useEffect(() => {\n    const computedScale = to - from;\n    computedScale !== scale && setScale(computedScale);\n  }, [to, from])\n  const updateInput = updateFunc => event => updateFunc(event.target.value);\n  return (\n    <div className=\"App\">\n      <h1>Range Slider</h1>\n      <h2>Example!</h2>\n      <br />\n      <br /><label>From</label><br/>\n      <input type=\"number\" value={from} onChange={updateInput(setFrom)} />\n      <br /><label>To</label><br/>\n      <input type=\"number\" value={to} onChange={updateInput(setTo)} />\n      <br />\n      <br />\n      <label>\n        Scale: {scale}\n        <br />(Difference between from and to\n        <br />which gets auto calculated\n        <br /> on changing from and to)\n      </label>\n      <br/>\n      <br/>\n      <label>Range Start Min <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMin} onChange={updateInput(setRangeStartMin)} />\n      <br /><label>Default Range Start </label><br/>\n      <input type=\"number\" value={defaultRangeStart} onChange={updateInput(setDefaultRangeStart)} />\n      <br /><label>Range Start Max  <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeStartMax} onChange={updateInput(setRangeStartMax)} />\n      <br /><label>Default Range End  <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={defaultRangeEnd} onChange={updateInput(setDefaultRangeEnd)} />\n      <br /><label>Range End Min</label><br/>\n      <input type=\"number\" value={rangeEndMin} onChange={updateInput(setRangeEndMin)} />\n      <br /><label>Range End Max <br/>(Will be implemented if required)</label><br/>\n      <input type=\"number\" value={rangeEndMax} onChange={updateInput(setRangeEndMax)} />\n      <br /><label>Range Difference</label><br/>\n      <input type=\"number\" value={rangeDiffLimit} onChange={updateInput(setRangeDiffLimit)} />\n      <RangeSlider {...props} {...moreProps} />\n      <div>\n        onAfterChange props callback reponse\n        <br />\n        <code>\n          {JSON.stringify(state.response, null, 2) }\n        </code>\n      </div>\n    </div>\n  )\n};","import React, { memo } from \"react\";\nimport {\n  DualRangeSliderSection,\n  Flex,\n  RangeValue,\n  SliderLineContainer,\n  SliderLineWrapper,\n  SliderLine,\n  SelectedSliderLine,\n  LeftSliderIcon,\n  RightSliderIcon\n} from './styles';\n\nconst View = props => {\n  const isTouchSupported = !!('ontouchstart' in window);\n  const start = isTouchSupported ? 'onTouchStart' : 'onMouseDown';\n  const up = isTouchSupported ? 'onTouchEnd'   : 'onMouseUp';\n  const move = isTouchSupported ? 'onTouchMove'  : 'onMouseMove';\n  const {\n    getSliderIconDiameter,\n    onTouchStart,\n    onMove,\n    onTouchEnd,\n    isActiveRange,\n    getRange,\n    rangeStartLeft,\n    rangeEndLeft,\n    wrapperRef,\n    selectedRangeWidth\n  } = props;\n  const eventListners = {\n    [start]: onTouchStart,\n    [move]: onMove,\n    [up]: onTouchEnd,\n  };\n  const sliderIconScaling = activeRange => isActiveRange(activeRange) ? 2 : 1;\n  const sliderRangeHeight = 2;\n  const sliderIconPosTop = (getSliderIconDiameter() - sliderRangeHeight) / 2;\n  return (\n    <DualRangeSliderSection>\n      <Flex>\n        <RangeValue>From {getRange().start} years</RangeValue>\n        <RangeValue textAlign=\"right\">To {getRange().end} years</RangeValue>\n      </Flex>\n      <SliderLineContainer>\n        <SliderLineWrapper {...eventListners}>\n          <SliderLine ref={wrapperRef} height={`${sliderRangeHeight}px`} >\n            <SelectedSliderLine left={`${rangeStartLeft}%`} width={`${selectedRangeWidth}%`} />\n            <LeftSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              left={`${rangeStartLeft}%`}\n              scale={sliderIconScaling('rangeStartLeft')}\n            />\n            <RightSliderIcon\n              diameter={`${getSliderIconDiameter()}px`}\n              top={`-${sliderIconPosTop}px`}\n              positionFrom={`${rangeEndLeft === 100 ? 'right' : 'left'}`}\n              positionAt={`${rangeEndLeft === 100 ? 0 : `${rangeEndLeft}%`}`}\n              scale={sliderIconScaling('rangeEndLeft')}\n            />\n          </SliderLine>\n        </SliderLineWrapper>\n      </SliderLineContainer>\n      <div className='range-ruler'>\n        <div className='range-start' />\n        <div className='range-end' />\n      </div>\n    </DualRangeSliderSection>\n  );\n};\n\nexport default memo(View);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from './Routes';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Routes />, rootElement);\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport RangeSlider from 'Pages/RangeSlider';\nimport \"styles.css\";\n\nexport default () =>  (\n  <Router>\n    <Switch>\n      <Route path=\"/\" exact component={RangeSlider} />\n      <Route path=\"/demo/range-slider\" exact component={RangeSlider} />\n    </Switch>\n  </Router>\n)\n"],"sourceRoot":""}